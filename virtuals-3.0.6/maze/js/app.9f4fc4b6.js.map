{"version":3,"file":"js/app.9f4fc4b6.js","mappings":"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","sources":["webpack://maze/./src/App.vue","webpack://maze/./src/components/MazeField.vue","webpack://maze/./src/components/MazeField.vue?c74e","webpack://maze/../shared/config/config.yaml","webpack://maze/./src/App.vue?7ccd","webpack://maze/./src/services/drawUtils.js","webpack://maze/./src/services/designMazeService.js","webpack://maze/./src/services/gifService.js","webpack://maze/./src/services/gifWraper.js","webpack://maze/./src/services/socketClientService.js","webpack://maze/./src/services/gameMazeService.js","webpack://maze/./src/globals/gameMaze.js","webpack://maze/./src/main.js","webpack://maze/./src/assets/design/coins/ sync ^\\.\\/bomb.*\\.png$","webpack://maze/./src/assets/design/coins/ sync ^\\.\\/coin.*\\.gif$","webpack://maze/./src/assets/design/ sync ^\\.\\/.*\\/biAngle\\.gif$","webpack://maze/./src/assets/design/ sync ^\\.\\/.*\\/bi\\.gif$","webpack://maze/./src/assets/design/ sync ^\\.\\/.*\\/end\\.gif$","webpack://maze/./src/assets/design/ sync ^\\.\\/.*\\/full\\.gif$","webpack://maze/./src/assets/design/ sync ^\\.\\/.*\\/quatro\\.gif$","webpack://maze/./src/assets/design/ sync ^\\.\\/.*\\/triple\\.gif$","webpack://maze/./src/assets/markers/ sync ^\\.\\/marker_.*\\.png$","webpack://maze/webpack/bootstrap","webpack://maze/webpack/runtime/chunk loaded","webpack://maze/webpack/runtime/compat get default export","webpack://maze/webpack/runtime/define property getters","webpack://maze/webpack/runtime/global","webpack://maze/webpack/runtime/hasOwnProperty shorthand","webpack://maze/webpack/runtime/make namespace object","webpack://maze/webpack/runtime/publicPath","webpack://maze/webpack/runtime/jsonp chunk loading","webpack://maze/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"content\">\n      <MazeField>\n        \n      </MazeField>\n    </div>\n</template>\n\n\n<script>\n\n\n\n\nimport MazeField from './components/MazeField.vue'\nimport config from '../../shared/config/config.yaml';\n\nconst DEBUG_MODE = config.debugMenu;\nconst FULL_SCREEN = config.fullScreen;\n\nexport default {\n  components: {\n    MazeField\n  },\n  data () {\n    return {\n      \n    }\n  },\n  mounted() {\n    if(!DEBUG_MODE){\n      //ipcRenderer.invoke('debugMode');\n      window.api.debugMode();\n      console.log(\"debug mode\");\n    }\n    if(FULL_SCREEN){\n      //ipcRenderer.invoke('fullScreen');\n      window.api.fullScreen();\n    }\n  },\n  created() {\n    document.title = \"Exolegend - Maze\";\n  },\n}\n</script>\n\n<style lang=\"scss\">\n* {\n  box-sizing: border-box;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\nbody {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n#content {\n  \n  /*background-image: url('@/assets/images/background.jpg');*/\n  \n}\n\n</style>\n","<template>\n    <div  :class=\"[standByClass, 'standby-illustration']\"></div>\n    <!-- <webview id=\"scoring\" style=\"display:inline-flex; width:640px; height:480px\" sandbox=\"allow-scripts\" :src=\"'https://192.168.5.31/board/arena?arena='+host\" :class=\"simulation ? 'scoring-hidden' : ''\"></webview> -->\n   \n        \n        <img id=\"transform\" :class=\"mazeClass\">\n        <canvas id=\"maze\" :class=\"mazeClass\">\n        </canvas>\n            \n          \n        <iframe id=\"scoring\" :src=\"iframeSrc\" :class=\"simulation || regi || playing || hasError? 'scoring-hidden' : ''\"></iframe>\n        <img src=\"@/assets/images/coin.gif\" alt=\"\" style=\"display: none;\" id=\"coin\"/>\n        <img src=\"@/assets/images/icon-exolegend-2.png\" alt=\"\" style=\"display: none;\" id=\"exolegend-logo\"/>\n        <img src=\"@/assets/images/exotec_logo.png\" alt=\"\" style=\"display: none;\" id=\"exotec-logo\"/>\n        <img src=\"@/assets/images/chessboard.png\" alt=\"\" style=\"display: none;\" id=\"chessboard\"/>\n        <img src=\"@/assets/images/wall-throught.gif\" alt=\"\" style=\"display: none;\" id=\"pass-wall\"/>\n        <img src=\"@/assets/images/robot-dead-2.gif\" alt=\"\" style=\"display: none;\" id=\"robot-dead\"/>\n        <img src=\"@/assets/images/dead.png\" alt=\"\" style=\"display: none;\" id=\"dead\"/>\n        <img src=\"@/assets/images/robot.png\" alt=\"\" style=\"display: none;\" id=\"robot\"/>\n        <img src=\"@/assets/images/winner.png\" alt=\"\" style=\"display: none;\" id=\"winner\"/>\n        <img src=\"@/assets/images/loser.png\" alt=\"\" style=\"display: none;\" id=\"loser\"/>\n        <img src=\"@/assets/images/equality.png\" alt=\"\" style=\"display: none;\" id=\"equality\"/>\n        <img src=\"@/assets/images/team1robot.png\" alt=\"\" style=\"display: none;\" id=\"light1\"/>\n        <img src=\"@/assets/images/team2robot.png\" alt=\"\" style=\"display: none;\" id=\"light2\"/>\n        <img src=\"@/assets/images/fire_trail2.png\" alt=\"\" style=\"display: none;\" id=\"fire-trail\"/>\n        <img src=\"@/assets/images/freezeEffect.png\" alt=\"\" style=\"display: none;\" id=\"freeze-effect\"/>\n        <img src=\"@/assets/images/position.png\" alt=\"\" style=\"display: none;\" id=\"position-icon\"/>\n        <div class=\"tag\" style=\"display: none;\" id=\"topleft\"></div>\n        <div class=\"tag\" style=\"display: none;\" id=\"topright\"></div>\n        <div class=\"tag\" style=\"display: none;\" id=\"bottomleft\"></div>\n        <div class=\"tag\" style=\"display: none;\" id=\"bottomright\"></div>\n    \n</template>\n\n\n\n\n\n\n<script>\n\n\n\nexport default {\n    data () {\n        return {\n            theGameState: {},\n            simulation: false,\n            playing: false,\n            regi: false,\n            host: \"\",\n            boardUrl: \"\",\n            darkMode: false,\n            hasError: false,\n            iframeSrc: '',\n        }\n    },\n    computed: {\n        canvas () {\n            return document.getElementById('maze');\n        },\n        mazeClass () {\n            return this.theGameState.simulation ? 'maze-simu' : 'maze-real';\n        },\n        standByClass() {\n            return this.theGameState.phase == 'STANDBY' ? 'standby-visible' : 'standby-hidden';\n        },\n    },\n    watch: {\n        theGameState : {\n            handler(newGameState, oldGameState) {\n                oldGameState;\n                if (this.host!=newGameState.host) {\n                    document.getElementById(\"content\").className = \"illustration-\" + newGameState.host;\n                }\n                this.host = newGameState.host;\n                this.simulation = newGameState.simulation;\n                this.playing = newGameState.phase == \"PLAY\";\n                this.darkMode = newGameState.darkMode;\n                if (this.boardUrl != newGameState.boardUrl) {\n                    this.boardUrl = newGameState.boardUrl;\n                    this.changeUrl(this.boardUrl + '/board/arena?arena='+this.host+'&dark='+this.darkMode);\n                }\n                let robotLen = 0;\n                for(let team of newGameState.teams){\n                    robotLen+=team.robots.length;\n                }\n                this.regi = robotLen > 0;\n\n            },\n            deep: true,\n        }\n    },\n    methods: {\n        resizeBoard() {\n            var scoring = document.getElementById('scoring');\n            scoring.style.width = window.innerHeight + \"px\"\n            scoring.style.left = Math.round((window.innerWidth - window.innerHeight)/2) + \"px\";\n        },\n        // Method to change the URL dynamically\n        async changeUrl(newUrl) {\n            this.hasError = false;  // Reset the error flag before checking\n\n            // Start by checking the URL with fetch\n            await this.checkIframeResponse(newUrl);\n            console.log(\"Error: \", this.hasError);\n        },\n        async checkIframeResponse(url) {\n            try {\n                const response = await fetch(url, { method: 'GET', mode: 'no-cors' });\n                // You can check the response status here\n                if (response) {\n                    // If the response is successful, update iframeSrc\n                    this.iframeSrc = url;\n                } else {\n                    // If response is not okay, trigger error\n                    this.hasError = true;\n                }\n            } catch (err) {\n                // Handle any error (like network failure)\n                console.error('Failed to load iframe resource:', err);\n                this.hasError = true;\n            }\n        },\n    },\n    mounted () {\n        this.$gameMaze.startUpdating(document.getElementById('maze'), this.theGameState);\n        \n        //update tag positions and size\n        this.$gameMaze.setTags(\n            document.getElementById('topleft'),\n            document.getElementById('topright'),\n            document.getElementById('bottomright'),\n            document.getElementById('bottomleft')\n        );\n        this.resizeBoard();\n        window.addEventListener(\"resize\", () => {\n            this.resizeBoard();\n        })\n        window.setTimeout(()=>{\n            this.resizeBoard();\n        }, 3000)\n    }\n\n}\n</script>\n\n\n\n\n<style>\n    #maze {\n        background-color: rgba(0, 0, 0, 0);\n        transform: translateX(0);\n    }\n    #maze.maze-simu {\n        opacity: 1;\n    }\n    #maze.maze-real {\n        opacity: 0;\n    }\n    #transform.maze-simu {\n        display: none;\n    }\n    #transform.maze-real {\n        display: block;\n    }\n    .maze-visible {\n        display: block;\n        margin: auto;\n    }\n    .maze-hidden {\n        display: none;\n    }\n    .standby-illustration {\n        width: 100%;\n        height: 100%;\n        background-image: url('@/assets/images/robot-fight.gif');\n    }\n    .standby-visible {\n        display: flex;\n        margin: auto;\n        position: absolute;\n        background-size: cover;\n    }\n    .standby-hidden {\n        display: none;\n    }\n    .tag {\n        background-color: white;\n        position: absolute;\n        border: 2px solid red;\n    }\n    .illustration-arena-a {\n        background-size: cover;\n        background-image: url('@/assets/design/arena-a/background.png');\n    }\n    .illustration-arena-b {\n        background-size: cover;\n        background-image: url('@/assets/design/arena-b/background.png');\n    }\n    .illustration-arena-c {\n        background-size: cover;\n        background-image: url('@/assets/design/arena-c/background.png');\n    }\n    .illustration-arena-d {\n        background-size: cover;\n        background-image: url('@/assets/design/arena-d/background.png');\n    }\n    .illustration-terra {\n        background-size: cover;\n        background-image: url('@/assets/design/terra/background.png');\n    }\n    #scoring {\n        left: 0;\n        top: 0;\n        height: 100%;\n        position: absolute;\n        z-index: 99999;\n        border: none;\n        \n    }\n    .scoring-hidden {\n        display: none !important;\n        \n    }\n    #transform {\n        display: block;\n        position: absolute;\n        \n        z-index: 999999;\n    }\n</style>","import { render } from \"./MazeField.vue?vue&type=template&id=67484ad4\"\nimport script from \"./MazeField.vue?vue&type=script&lang=js\"\nexport * from \"./MazeField.vue?vue&type=script&lang=js\"\n\nimport \"./MazeField.vue?vue&type=style&index=0&id=67484ad4&lang=css\"\n\nimport exportComponent from \"/home/lgiband/work/exolegend/exobot/maze/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default {version:'3.0.6-4004acb3',build:1,mazeWidth:3.02768,mazeHeight:3.02768,tagSize:0.066,detectionTagSize:0.1,tagDistance:0.08,tagTopDistance:0.08,reverseAngleFor:[1,10],drawTag:false,tags:{'1':[0,1,1,-1],'2':[1,1,-1,-1],'3':[1,0,-1,1],'4':[0,0,1,1]},wallsFile:'walls.lbt',coinsFile:'coins.fld',modulesLengthHeight:12,modulesLengthWidth:12,moduleHeight:0.2523,moduleWidth:0.2523,coinRadius:0.06,coinColor:'yellow',coinStrokeColor:'red',projectedCircleOpacity:0.65,projectedCIrcleRadius:0.25,robotRadius:0.06,robotTakeRadius:0.11,robotWallDetectionRadius:0.015,robotWheelRadius:0.0325,robotCenterX:0,robotCenterY:0.02,robotUndetectedTimeout:600,gameDuration:120,shrinkTime:20,beginTolerence:0.055,authorizedFreezTime:36000,freezTimeKillTolerence:0.012,timeOutBeforeKill:3,wallPenalityTime:4,wallPenalityMaxSpeed:0.1,maxPenalityBeforekill:1000000,deathCounter:7,undetectedTagKillTimeTolerence:1.2,robotAroundFrag:0.02,fragScore:0,weaponPosition:0.162,balloonRadius:0.05,penalityTimeForAdditionalWall:0,coinDesign:'BOMB',rocketSquareMaxRadius:5,rocketSpeed:0.6,randomMaze:true,timeBetweenSpawn:6.1,nbBombsBySpawn:4.8,incrementTimeByShrink:0.5,decrementBombByShrink:0.6,bombTimeToExplode:7,explosionSpeed:0.5,explosionKillRadius:0.12,isPenalityDroppingBomb:true,bombIsKilling:true,freezeDuration:4,cameraHeight:2.242,robotHeight:0.22,antennaPort:'/dev/ttyUSB0',cameraPort:2,antennaSleepTime:0.04,dummyMode:false,calibrationCode:'0000',manualCalibrationIterations:20,darkMode:false,projx:1.3,projz:2.89,projy:-0.62,remote:true,arenaDebugRemote:true,debugRemoteSpeed:0.8,verticalUI:true,robotPlaying:1,simulationMenu:true,calibrationMenu:false,precisionCheckMenu:false,playMenu:false,homePage:'/simulation',designForTerra:'arena-a',showScoreFrame:false,fullScreen:false,debugMenu:false,showDebugRobots:false,logLevel:0,token:'XXXX',mazeKeystoneOffset:{tl:[0,0],tr:[0,0],br:[0,0],bl:[0,0]},maxAccel:1.8,logFalcon:false,showFalconMeanTime:false,freezMazeTags:true,markerFilterCoefficient:5,tagToDebug:23,useLargeDetectionParams:true,RemazeIfNoRobotScanned:false,positionDeviation:0.001,angleDeviation:0.01,wheelRadiusImprecision:0.01,debugGaussianNoise:false};","import { render } from \"./App.vue?vue&type=template&id=90093eee\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=90093eee&lang=scss\"\n\nimport exportComponent from \"/home/lgiband/work/exolegend/exobot/maze/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import numeric from \"numeric\";\nexport function drawReturnedImage(ctx, image, x, y, w, h, a, cx = null, cy = null) {\n    a = -a;\n    if (cx == null) {\n        cx = -w/2;\n    }\n    if (cy == null) {\n        cy = -h/2;\n    }\n    ctx.save();\n    ctx.rotate(a / 180 * Math.PI);\n    let cosa = Math.cos(a / 180 * Math.PI);\n    let sina = Math.sin(a / 180 * Math.PI);\n    ctx.translate(sina * y + cosa * x, - x * sina + cosa * y);\n    ctx.drawImage(image, cx, cy, w, h);\n    ctx.restore();\n\n}\nexport function rotate(ctx, callback, x, y, a) {\n    a = -a;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(a / 180 * Math.PI);\n    callback();\n\n    ctx.restore();\n}\nexport function getTransform(from, to) {\n    var A, H, b, h, i, k, k_i, l, lhs, m, ref, rhs;\n    console.assert((from.length === (ref = to.length) && ref === 4));\n    A = []; // 8x8\n    for (i = k = 0; k < 4; i = ++k) {\n\n        A.push([from[i].x, from[i].y, 1, 0, 0, 0, -from[i].x * to[i].x, -from[i].y * to[i].x]);\n        A.push([0, 0, 0, from[i].x, from[i].y, 1, -from[i].x * to[i].y, -from[i].y * to[i].y]);\n    }\n    b = []; // 8x1\n    for (i = l = 0; l < 4; i = ++l) {\n        b.push(to[i].x);\n        b.push(to[i].y);\n    }\n    // Solve A * h = b for h\n    h = numeric.solve(A, b);\n    H = [[h[0], h[1], 0, h[2]], [h[3], h[4], 0, h[5]], [0, 0, 1, 0], [h[6], h[7], 0, 1]];\n    // Sanity check that H actually maps `from` to `to`\n    for (i = m = 0; m < 4; i = ++m) {\n        lhs = numeric.dot(H, [from[i].x, from[i].y, 0, 1]);\n        k_i = lhs[3];\n        rhs = numeric.dot(k_i, [to[i].x, to[i].y, 0, 1]);\n        console.assert(numeric.norm2(numeric.sub(lhs, rhs)) < 1e-9, \"Not equal:\", from, to, lhs, rhs);\n    }\n    return H;\n}\n\nexport function applyTransform(elementId, originalPos, targetPos, callback) {\n    var H, from, i, j, p, to;\n    // All offsets were calculated relative to the document\n    // Make them relative to (0, 0) of the element instead\n    from = (function () {\n        var k, len, results;\n        results = [];\n        for (k = 0, len = originalPos.length; k < len; k++) {\n            p = originalPos[k];\n            results.push({\n                x: p[0] - originalPos[0][0],\n                y: p[1] - originalPos[0][1]\n            });\n        }\n        return results;\n    })();\n    to = (function () {\n        var k, len, results;\n        results = [];\n        for (k = 0, len = targetPos.length; k < len; k++) {\n            p = targetPos[k];\n            results.push({\n                x: p[0] - originalPos[0][0],\n                y: p[1] - originalPos[0][1]\n            });\n        }\n        return results;\n    })();\n    // Solve for the transform\n    H = getTransform(from, to);\n\n    // Apply the matrix3d as H transposed because matrix3d is column major order\n    // Also need use toFixed because css doesn't allow scientific notation\n    var el = document.getElementById(elementId);\n    el.style.transform =\n        `matrix3d(${((function () {\n            var k, results;\n            results = [];\n            for (i = k = 0; k < 4; i = ++k) {\n                results.push((function () {\n                    var l, results1;\n                    results1 = [];\n                    for (j = l = 0; l < 4; j = ++l) {\n                        results1.push(H[j][i].toFixed(20));\n                    }\n                    return results1;\n                })());\n            }\n            return results;\n        })()).join(',')})`;\n    el.style.transformOrigin = '0 0';\n    /*getTransformedCanvas(el, `matrix3d(${((function () {\n        var k, results;\n        results = [];\n        for (i = k = 0; k < 4; i = ++k) {\n            results.push((function () {\n                var l, results1;\n                results1 = [];\n                for (j = l = 0; l < 4; j = ++l) {\n                    results1.push(H[j][i].toFixed(20));\n                }\n                return results1;\n            })());\n        }\n        return results;\n    })()).join(',')})`).then(\n        (copy) => {\n            copy;\n            console.log(copy);\n        }\n    )*/\n\n\n\n    return typeof callback === \"function\" ? callback(elementId, H) : void 0;\n}\nexport function getTransformedCanvas(canvas, CSSTransform) {\n    return new Promise(function (res, rej) {\n        var dim = getTransformedDimensions(canvas, CSSTransform);\n        var xlinkNS = \"http://www.w3.org/1999/xlink\",\n            svgNS = 'http://www.w3.org/2000/svg';\n        var svg = document.createElementNS(svgNS, 'svg'),\n            defs = document.createElementNS(svgNS, 'defs'),\n            style = document.createElementNS(svgNS, 'style'),\n            image = document.createElementNS(svgNS, 'image');\n        image.setAttributeNS(xlinkNS, 'href', canvas.toDataURL());\n        image.setAttribute('width', canvas.width);\n        image.setAttribute('height', canvas.height);\n        style.innerHTML = 'image{transform:' + CSSTransform + ';}';\n        svg.appendChild(defs);\n        defs.appendChild(style);\n        //var rect = document.createElement('rect');\n\n        svg.appendChild(image);\n        svg.setAttribute('width', dim.width);\n        svg.setAttribute('height', dim.height);\n        var svgStr = new XMLSerializer().serializeToString(svg);\n        var img = new Image();\n        img.onload = function () { res(img) };\n        img.onerror = rej;\n        img.src = URL.createObjectURL(new Blob([svgStr], { type: 'image/svg+xml' }));\n    });\n}\nexport function getTransformedDimensions(canvas, CSSTransform) {\n    var orphan = !canvas.parentNode;\n    if (orphan) document.body.appendChild(canvas);\n    var oldTrans = getComputedStyle(canvas).transform;\n    canvas.style.transform = CSSTransform;\n    var rect = canvas.getBoundingClientRect();\n    canvas.style.transform = oldTrans;\n    if (orphan) document.body.removeChild(canvas);\n    return rect;\n}","/* eslint-disable */\nimport config from '../../../shared/config/config.yaml';\nimport {drawReturnedImage} from './drawUtils';\n\n//const this.designName  = config.designName;\nconst MODULE_WIDTH = config.moduleWidth;\nconst MAZE_HEIGHT = config.mazeHeight;\n\nexport default class DesignMazeService {\n    constructor (designName) {\n        this.designName = designName;\n        this.quatroLoaded = false;\n        this.quatro = new Image();\n        this.quatro.src = require('../assets/design/' + this.designName + '/quatro.gif');\n        this.quatroDim = [0.15, 0.15]\n\n        this.tripleLoaded = false;\n        this.triple = new Image();\n        this.triple.src = require('../assets/design/' + this.designName + '/triple.gif');\n        this.tripleDim = [0.15, 0.15]\n\n        this.biLoaded = false;\n        this.bi = new Image();\n        this.bi.src = require('../assets/design/' + this.designName + '/bi.gif');\n        this.biDim = [0.15, 0.15]\n\n        this.biAngleLoaded = false;\n        this.biAngle = new Image();\n        this.biAngle.src = require('../assets/design/' + this.designName + '/biAngle.gif');\n        this.biAngleDim = [0.15, 0.15]\n\n        this.fullLoaded= false;\n        this.full = new Image();\n        this.full.src = require('../assets/design/' + this.designName + '/full.gif');\n        this.fullDim = [0.105, 0.15]\n\n\n        this.endLoaded = false;\n        this.end = new Image();\n        this.end.src = require('../assets/design/' + this.designName + '/end.gif');\n        this.endDim = [0.15, 0.15]\n\n        this.links = [this.end, this.bi, this.biAngle, this.triple, this.quatro];\n        this.linksDIm = [this.endDim, this.biDim, this.biAngleDim, this.tripleDim, this.quatroDim];\n        \n    }\n    isLoaded() {\n        return true; //this.biLoaded && this.biAngleLoaded && this.fullLoaded && this.endLoaded && this.quatroLoaded && this.tripleLoaded;\n    }\n    draw (gs, ctx, rh, rw) {\n        if(this.isLoaded()) {\n            let ilen = gs.modules[0].length;\n            let jlen = gs.modules.length;\n            let retCoef = 0\n            for (let i = 0; i < ilen; i++) {\n                \n                for (let j = 0; j < jlen; j++) {\n\n                    let module = gs.modules[j][i];\n                    if( module.enable){\n                        //bottom right corner\n                        let bottomRightCorner = this.initWallCorner();\n                        if (module.walls.bottom != null) bottomRightCorner.left = true;\n                        if (module.walls.right != null) bottomRightCorner.top = true;\n                        if (i < ilen - 1) {\n                            let rightModule = gs.modules[j][i+1];\n                            if(rightModule.enable){\n                                bottomRightCorner.right = rightModule.walls.bottom != null;\n                            }\n                        }\n                        if (j > 0) {\n                            let bottomModule = gs.modules[j - 1][i];\n                            if(bottomModule.enable){\n                                if (bottomModule.walls.right != null) bottomRightCorner.bottom = true;\n                            }\n                        }\n                        this.drawLink(ctx, rh, rw, i+1, j, bottomRightCorner);\n\n                        //topright corner and bottom left corner\n                        let topCheck  = ( j == jlen -1 || (j < jlen - 1 && gs.modules[j + 1][i].enable == false) );\n                        let leftCheck = ( i == 0 || (i > 0 && gs.modules[j][i-1].enable == false) );\n                        if (topCheck && leftCheck) {\n                            let topLeftCorner = this.initWallCorner();\n                            topLeftCorner.right = true;\n                            topLeftCorner.bottom = true;\n                            this.drawLink(ctx, rh, rw, i, j + 1, topLeftCorner)\n                            \n                        }\n                        if (topCheck) {\n                            let topRightCorner = this.initWallCorner();\n                            topRightCorner.left = true;\n                            topRightCorner.right = i < ilen-1 && gs.modules[j][i + 1].enable == true; //have to be chacked\n                            topRightCorner.bottom = module.walls.right != null;\n                            this.drawLink(ctx, rh, rw, i + 1, j + 1, topRightCorner)\n                        }\n                        if (leftCheck) {\n                            let bottomLeftCorner = this.initWallCorner();\n                            bottomLeftCorner.top = true;\n                            bottomLeftCorner.bottom = j > 0 && gs.modules[j - 1][i].enable == true; // have to be checked\n                            bottomLeftCorner.right = module.walls.bottom != null;\n                            this.drawLink(ctx, rh, rw, i, j, bottomLeftCorner)\n                        }\n\n                        this.drawWalls(ctx, rh, rw, i, j, module);\n\n                    }\n                }\n            }\n        }\n    }\n    initWallCorner() {\n        return {\n            \"top\" : 0,\n            \"right\" : 0,\n            \"bottom\" : 0,\n            \"left\" : 0,\n        };\n    }\n    getLinkRotationAngle(link, type) {\n        if(type == 0) {\n            let angles = [270, 180, 90, 0];\n            let i = 0;\n            for(let c in link) {\n                if (link[c]) return angles[i];\n                i++;\n            }\n            return 0;\n        }else if(type == 1) {\n            if(link.top) return 90;\n        } else if (type == 2) {\n            let trues = 0;\n            let angle = 0;\n            for(let c in link) {\n                if(link[c]) {\n                    trues += 1;\n                }else{\n                    if(trues < 2){\n                        angle += -90;\n                        if(trues > 0) {\n                            angle += -90;\n                            trues = 0;\n                        }\n                    }    \n                }\n            }\n            return angle;\n        } else if (type == 3) {\n            let angles = [180, 90, 0, 270];\n            let i = 0;\n            for(let c in link) {\n                if (!link[c]) return angles[i];\n                i++;\n            }\n            return 0;\n        }\n        return 0;\n    }\n    drawLink(ctx, rh, rw, i, j, corner) {\n        let index = 0;\n        for(let c in corner) {\n            if(corner[c]) index++;\n        }\n        if(index==0) index = -1;\n        if(index==1)index=0;\n        if(index == 2) {\n            let testBi = ((corner.left ? 1 : -1) * (corner.right ? 1 : -1)) > 0 ? 1 : 0;\n            index -= testBi;\n        }\n        if(index >= 0)\n            drawReturnedImage(ctx, this.links[index], i*MODULE_WIDTH*rw,  MAZE_HEIGHT*rh - j*MODULE_WIDTH*rh, this.linksDIm[index][0] * rw, this.linksDIm[index][1] * rh, this.getLinkRotationAngle(corner, index));\n            \n        \n    }\n    drawWalls(ctx, rh, rw,i,j, module) {\n        let walls = [\"left\", \"top\", \"right\", \"bottom\"];\n        let coor = [[i, j + 0.5], [i+0.5, j+1], [i+1, j+0.5], [i + 0.5, j]];\n        let index = 0;\n        for (let w of walls) {\n            if(module.walls[w] != null) {\n                let angle = 90;\n                if(index%2!=0)angle=0;\n                drawReturnedImage(ctx, this.full, coor[index][0]*MODULE_WIDTH*rw, MAZE_HEIGHT*rh - coor[index][1]*MODULE_WIDTH*rh, this.fullDim[0]*rw, this.fullDim[1]*rh, angle);\n            }\n            index++;\n        }\n    }\n} ","/*============================================================================\n  Gif Decoder and player for use with Canvas API's\n\n**NOT** for commercial use.\n\nTo use\n\n    var myGif = GIF();                  // creates a new gif  \n    var myGif = new GIF();              // will work as well but not needed as GIF() returns the correct reference already.    \n    myGif.load(\"myGif.gif\");            // set URL and load\n    myGif.onload = function(event){     // fires when loading is complete\n                                        //event.type   = \"load\"\n                                        //event.path   array containing a reference to the gif\n    }\n    myGif.onprogress = function(event){ // Note this function is not bound to myGif\n                                        //event.bytesRead    bytes decoded\n                                        //event.totalBytes   total bytes\n                                        //event.frame        index of last frame decoded\n    }\n    myGif.onerror = function(event){    // fires if there is a problem loading. this = myGif\n                                        //event.type   a description of the error\n                                        //event.path   array containing a reference to the gif\n    }\n\nOnce loaded the gif can be displayed\n    if(!myGif.loading){\n        ctx.drawImage(myGif.image,0,0); \n    }\nYou can display the last frame loaded during loading\n\n    if(myGif.lastFrame !== null){\n        ctx.drawImage(myGif.lastFrame.image,0,0); \n    }\n\n\nTo access all the frames\n    var gifFrames = myGif.frames; // an array of frames.\n\nA frame holds various frame associated items.\n    myGif.frame[0].image; // the first frames image\n    myGif.frame[0].delay; // time in milliseconds frame is displayed for\n\n\n\n\nGifs use various methods to reduce the file size. The loaded frames do not maintain the optimisations and hold the full resolution frames as DOM images. This mean the memory footprint of a decode gif will be many time larger than the Gif file.\n */\n\n// eslint-disable-next-line no-unused-vars\nconst GIF = function () {\n    // **NOT** for commercial use.\n    var timerID;                          // timer handle for set time out usage\n    var st;                               // holds the stream object when loading.\n    var interlaceOffsets  = [0, 4, 2, 1]; // used in de-interlacing.\n    var interlaceSteps    = [8, 8, 4, 2];\n    var interlacedBufSize;  // this holds a buffer to de interlace. Created on the first frame and when size changed\n    var deinterlaceBuf;\n    var pixelBufSize;    // this holds a buffer for pixels. Created on the first frame and when size changed\n    var pixelBuf;\n    const GIF_FILE = { // gif file data headers\n        GCExt   : 0xF9,\n        COMMENT : 0xFE,\n        APPExt  : 0xFF,\n        UNKNOWN : 0x01, // not sure what this is but need to skip it in parser\n        IMAGE   : 0x2C,\n        EOF     : 59,   // This is entered as decimal\n        EXT     : 0x21,\n    };      \n    // simple buffered stream used to read from the file \n    var Stream = function (data) { \n        this.data = new Uint8ClampedArray(data);\n        this.pos  = 0;\n        var len   = this.data.length;\n        this.getString = function (count) { // returns a string from current pos of len count\n            var s = \"\";\n            while (count--) { s += String.fromCharCode(this.data[this.pos++]) }\n            return s;\n        };\n        this.readSubBlocks = function () { // reads a set of blocks as a string\n            var size, count, data  = \"\";\n            do {\n                count = size = this.data[this.pos++];\n                while (count--) { data += String.fromCharCode(this.data[this.pos++]) }\n            } while (size !== 0 && this.pos < len);\n            return data;\n        }\n        this.readSubBlocksB = function () { // reads a set of blocks as binary\n            var size, count, data = [];\n            do {\n                count = size = this.data[this.pos++];\n                while (count--) { data.push(this.data[this.pos++]);}\n            } while (size !== 0 && this.pos < len);\n            return data;\n        }\n    };\n    // LZW decoder uncompressed each frames pixels\n    // this needs to be optimised.\n    // minSize is the min dictionary as powers of two\n    // size and data is the compressed pixels\n    function lzwDecode(minSize, data) {\n        var i, pixelPos, pos, clear, eod, size, done, dic, code, last, d, len;\n        pos = pixelPos = 0;\n        dic      = [];\n        clear    = 1 << minSize;\n        eod      = clear + 1;\n        size     = minSize + 1;\n        done     = false;\n        while (!done) { // JavaScript optimisers like a clear exit though I never use 'done' apart from fooling the optimiser\n            last = code;\n            code = 0;\n            for (i = 0; i < size; i++) {\n                if (data[pos >> 3] & (1 << (pos & 7))) { code |= 1 << i }\n                pos++;\n            }\n            if (code === clear) { // clear and reset the dictionary\n                dic = [];\n                size = minSize + 1;\n                for (i = 0; i < clear; i++) { dic[i] = [i] }\n                dic[clear] = [];\n                dic[eod] = null;\n            } else {\n                if (code === eod) {  done = true; return }\n                if (code >= dic.length) { dic.push(dic[last].concat(dic[last][0])) }\n                else if (last !== clear) { dic.push(dic[last].concat(dic[code][0])) }\n                d = dic[code];\n                len = d.length;\n                for (i = 0; i < len; i++) { pixelBuf[pixelPos++] = d[i] }\n                if (dic.length === (1 << size) && size < 12) { size++ }\n            }\n        }\n    }\n    function parseColourTable(count) { // get a colour table of length count  Each entry is 3 bytes, for RGB.\n        var colours = [];\n        for (var i = 0; i < count; i++) { colours.push([st.data[st.pos++], st.data[st.pos++], st.data[st.pos++]]) }\n        return colours;\n    }\n    function parse (){        // read the header. This is the starting point of the decode and async calls parseBlock\n        var bitField;\n        st.pos                += 6;  \n        gif.width             = (st.data[st.pos++]) + ((st.data[st.pos++]) << 8);\n        gif.height            = (st.data[st.pos++]) + ((st.data[st.pos++]) << 8);\n        bitField              = st.data[st.pos++];\n        gif.colorRes          = (bitField & 0b1110000) >> 4;\n        gif.globalColourCount = 1 << ((bitField & 0b111) + 1);\n        gif.bgColourIndex     = st.data[st.pos++];\n        st.pos++;                    // ignoring pixel aspect ratio. if not 0, aspectRatio = (pixelAspectRatio + 15) / 64\n        if (bitField & 0b10000000) { gif.globalColourTable = parseColourTable(gif.globalColourCount) } // global colour flag\n        setTimeout(parseBlock, 0);\n    }\n    function parseAppExt() { // get application specific data. Netscape added iterations and terminator. Ignoring that\n        st.pos += 1;\n        if ('NETSCAPE' === st.getString(8)) { st.pos += 8 }  // ignoring this data. iterations (word) and terminator (byte)\n        else {\n            st.pos += 3;            // 3 bytes of string usually \"2.0\" when identifier is NETSCAPE\n            st.readSubBlocks();     // unknown app extension\n        }\n    }\n    function parseGCExt() { // get GC data\n        var bitField;\n        st.pos++;\n        bitField              = st.data[st.pos++];\n        gif.disposalMethod    = (bitField & 0b11100) >> 2;\n        gif.transparencyGiven = bitField & 0b1 ? true : false; // ignoring bit two that is marked as  userInput???\n        gif.delayTime         = (st.data[st.pos++]) + ((st.data[st.pos++]) << 8);\n        gif.transparencyIndex = st.data[st.pos++];\n        st.pos++;\n    }\n    function parseImg() {                           // decodes image data to create the indexed pixel image\n        var deinterlace, frame, bitField;\n        deinterlace = function (width) {                   // de interlace pixel data if needed\n            var lines, fromLine, pass, toLine;\n            lines = pixelBufSize / width;\n            fromLine = 0;\n            if (interlacedBufSize !== pixelBufSize) {      // create the buffer if size changed or undefined.\n                deinterlaceBuf = new Uint8Array(pixelBufSize);\n                interlacedBufSize = pixelBufSize;\n            }\n            for (pass = 0; pass < 4; pass++) {\n                for (toLine = interlaceOffsets[pass]; toLine < lines; toLine += interlaceSteps[pass]) {\n                    deinterlaceBuf.set(pixelBuf.subarray(fromLine, fromLine + width), toLine * width);\n                    fromLine += width;\n                }\n            }\n        };\n        frame                = {}\n        gif.frames.push(frame);\n        frame.disposalMethod = gif.disposalMethod;\n        frame.time           = gif.length;\n        frame.delay          = gif.delayTime * 10;\n        gif.length          += frame.delay;\n        if (gif.transparencyGiven) { frame.transparencyIndex = gif.transparencyIndex }\n        else { frame.transparencyIndex = undefined }\n        frame.leftPos = (st.data[st.pos++]) + ((st.data[st.pos++]) << 8);\n        frame.topPos  = (st.data[st.pos++]) + ((st.data[st.pos++]) << 8);\n        frame.width   = (st.data[st.pos++]) + ((st.data[st.pos++]) << 8);\n        frame.height  = (st.data[st.pos++]) + ((st.data[st.pos++]) << 8);\n        bitField      = st.data[st.pos++];\n        frame.localColourTableFlag = bitField & 0b10000000 ? true : false; \n        if (frame.localColourTableFlag) { frame.localColourTable = parseColourTable(1 << ((bitField & 0b111) + 1)) }\n        if (pixelBufSize !== frame.width * frame.height) { // create a pixel buffer if not yet created or if current frame size is different from previous\n            pixelBuf     = new Uint8Array(frame.width * frame.height);\n            pixelBufSize = frame.width * frame.height;\n        }\n        lzwDecode(st.data[st.pos++], st.readSubBlocksB()); // decode the pixels\n        if (bitField & 0b1000000) {                        // de interlace if needed\n            frame.interlaced = true;\n            deinterlace(frame.width);\n        } else { frame.interlaced = false }\n        processFrame(frame);                               // convert to canvas image\n    }\n    function processFrame(frame) { // creates a RGBA canvas image from the indexed pixel data.\n        var ct, cData, dat, pixCount, ind, useT, i, pixel, pDat, col, /*frame,*/ ti;\n        frame.image        = document.createElement('canvas');\n        frame.image.width  = gif.width;\n        frame.image.height = gif.height;\n        frame.image.ctx    = frame.image.getContext(\"2d\");\n        ct = frame.localColourTableFlag ? frame.localColourTable : gif.globalColourTable;\n        if (gif.lastFrame === null) { gif.lastFrame = frame }\n        useT = (gif.lastFrame.disposalMethod === 2 || gif.lastFrame.disposalMethod === 3) ? true : false;\n        if (!useT) { frame.image.ctx.drawImage(gif.lastFrame.image, 0, 0, gif.width, gif.height) }\n        cData = frame.image.ctx.getImageData(frame.leftPos, frame.topPos, frame.width, frame.height);\n        ti  = frame.transparencyIndex;\n        dat = cData.data;\n        if (frame.interlaced) { pDat = deinterlaceBuf }\n        else { pDat = pixelBuf }\n        pixCount = pDat.length;\n        ind = 0;\n        for (i = 0; i < pixCount; i++) {\n            pixel = pDat[i];\n            col   = ct[pixel];\n            if (ti !== pixel) {\n                dat[ind++] = col[0];\n                dat[ind++] = col[1];\n                dat[ind++] = col[2];\n                dat[ind++] = 255;      // Opaque.\n            } else\n                if (useT) {\n                    dat[ind + 3] = 0; // Transparent.\n                    ind += 4;\n                } else { ind += 4 }\n        }\n        frame.image.ctx.putImageData(cData, frame.leftPos, frame.topPos);\n        gif.lastFrame = frame;\n        if (!gif.waitTillDone && typeof gif.onload === \"function\") { doOnloadEvent() }// if !waitTillDone the call onload now after first frame is loaded\n    }\n    // **NOT** for commercial use.\n    function finnished() { // called when the load has completed\n        gif.loading           = false;\n        gif.frameCount        = gif.frames.length;\n        gif.lastFrame         = null;\n        st                    = undefined;\n        gif.complete          = true;\n        gif.disposalMethod    = undefined;\n        gif.transparencyGiven = undefined;\n        gif.delayTime         = undefined;\n        gif.transparencyIndex = undefined;\n        gif.waitTillDone      = undefined;\n        pixelBuf              = undefined; // dereference pixel buffer\n        deinterlaceBuf        = undefined; // dereference interlace buff (may or may not be used);\n        pixelBufSize          = undefined;\n        deinterlaceBuf        = undefined;\n        gif.currentFrame      = 0;\n        if (gif.frames.length > 0) { gif.image = gif.frames[0].image }\n        doOnloadEvent();\n        if (typeof gif.onloadall === \"function\") {\n            (gif.onloadall.bind(gif))({   type : 'loadall', path : [gif] });\n        }\n        if (gif.playOnLoad) { gif.play() }\n    }\n    function canceled () { // called if the load has been cancelled\n        finnished();\n        if (typeof gif.cancelCallback === \"function\") { (gif.cancelCallback.bind(gif))({ type : 'canceled', path : [gif] }) }\n    }\n    function parseExt() {              // parse extended blocks\n        const blockID = st.data[st.pos++];\n        if(blockID === GIF_FILE.GCExt) { parseGCExt() }\n        else if(blockID === GIF_FILE.COMMENT) { gif.comment += st.readSubBlocks() }\n        else if(blockID === GIF_FILE.APPExt) { parseAppExt() }\n        else {\n            if(blockID === GIF_FILE.UNKNOWN) { st.pos += 13; } // skip unknow block\n            st.readSubBlocks();\n        }\n\n    }\n    function parseBlock() { // parsing the blocks\n        if (gif.cancel !== undefined && gif.cancel === true) { canceled(); return }\n\n        const blockId = st.data[st.pos++];\n        if(blockId === GIF_FILE.IMAGE ){ // image block\n            parseImg();\n            if (gif.firstFrameOnly) { finnished(); return }\n        }else if(blockId === GIF_FILE.EOF) { finnished(); return }\n        else { parseExt() }\n        if (typeof gif.onprogress === \"function\") {\n            gif.onprogress({ bytesRead  : st.pos, totalBytes : st.data.length, frame : gif.frames.length });\n        }\n        setTimeout(parseBlock, 0); // parsing frame async so processes can get some time in.\n    }\n    function cancelLoad(callback) { // cancels the loading. This will cancel the load before the next frame is decoded\n        if (gif.complete) { return false }\n        gif.cancelCallback = callback;\n        gif.cancel         = true;\n        return true;\n    }\n    function error(type) {\n        if (typeof gif.onerror === \"function\") { (gif.onerror.bind(this))({ type : type, path : [this] }) }\n        gif.onload  = gif.onerror = undefined;\n        gif.loading = false;\n    }\n    function doOnloadEvent() { // fire onload event if set\n        gif.currentFrame = 0;\n        gif.nextFrameAt  = gif.lastFrameAt  = new Date().valueOf(); // just sets the time now\n        if (typeof gif.onload === \"function\") { (gif.onload.bind(gif))({ type : 'load', path : [gif] }) }\n        gif.onerror = gif.onload  = undefined;\n    }\n    function dataLoaded(data) { // Data loaded create stream and parse\n        st = new Stream(data);\n        parse();\n    }\n    function loadGif(filename) { // starts the load\n        var ajax = new XMLHttpRequest();\n        ajax.responseType = \"arraybuffer\";\n        ajax.onload = function (e) {\n            if (e.target.status === 404) { error(\"File not found\") }\n            else if(e.target.status >= 200 && e.target.status < 300 ) { dataLoaded(ajax.response) }\n            else { error(\"Loading error : \" + e.target.status) }\n        };\n        ajax.open('GET', filename, true);\n        ajax.send();\n        // eslint-disable-next-line no-unused-vars\n        ajax.onerror = function (e) { error(\"File error\") };\n        this.src = filename;\n        this.loading = true;\n    }\n    function play() { // starts play if paused\n        if (!gif.playing) {\n            gif.paused  = false;\n            gif.playing = true;\n            playing();\n        }\n    }\n    function pause() { // stops play\n        gif.paused  = true;\n        gif.playing = false;\n        clearTimeout(timerID);\n    }\n    function togglePlay(){\n        if(gif.paused || !gif.playing){ gif.play() }\n        else{ gif.pause() }\n    }\n    function seekFrame(frame) { // seeks to frame number.\n        clearTimeout(timerID);\n        gif.currentFrame = frame % gif.frames.length;\n        if (gif.playing) { playing() }\n        else { gif.image = gif.frames[gif.currentFrame].image }\n    }\n    function seek(time) { // time in Seconds  // seek to frame that would be displayed at time\n        clearTimeout(timerID);\n        if (time < 0) { time = 0 }\n        time *= 1000; // in ms\n        time %= gif.length;\n        var frame = 0;\n        while (time > gif.frames[frame].time + gif.frames[frame].delay && frame < gif.frames.length) {  frame += 1 }\n        gif.currentFrame = frame;\n        if (gif.playing) { playing() }\n        else { gif.image = gif.frames[gif.currentFrame].image}\n    }\n    function playing() {\n        var delay;\n        var frame;\n        if (gif.playSpeed === 0) {\n            gif.pause();\n            return;\n        } else {\n            if (gif.playSpeed < 0) {\n                gif.currentFrame -= 1;\n                if (gif.currentFrame < 0) {gif.currentFrame = gif.frames.length - 1 }\n                frame = gif.currentFrame;\n                frame -= 1;\n                if (frame < 0) {  frame = gif.frames.length - 1 }\n                delay = -gif.frames[frame].delay * 1 / gif.playSpeed;\n            } else {\n                gif.currentFrame += 1;\n                gif.currentFrame %= gif.frames.length;\n                delay = gif.frames[gif.currentFrame].delay * 1 / gif.playSpeed;\n            }\n            gif.image = gif.frames[gif.currentFrame].image;\n            timerID = setTimeout(playing, delay);\n        }\n    }\n    var gif = {                      // the gif image object\n        onload         : null,       // fire on load. Use waitTillDone = true to have load fire at end or false to fire on first frame\n        onerror        : null,       // fires on error\n        onprogress     : null,       // fires a load progress event\n        onloadall      : null,       // event fires when all frames have loaded and gif is ready\n        paused         : false,      // true if paused\n        playing        : false,      // true if playing\n        waitTillDone   : true,       // If true onload will fire when all frames loaded, if false, onload will fire when first frame has loaded\n        loading        : false,      // true if still loading\n        firstFrameOnly : false,      // if true only load the first frame\n        width          : null,       // width in pixels\n        height         : null,       // height in pixels\n        frames         : [],         // array of frames\n        comment        : \"\",         // comments if found in file. Note I remember that some gifs have comments per frame if so this will be all comment concatenated\n        length         : 0,          // gif length in ms (1/1000 second)\n        currentFrame   : 0,          // current frame. \n        frameCount     : 0,          // number of frames\n        playSpeed      : 1,          // play speed 1 normal, 2 twice 0.5 half, -1 reverse etc...\n        lastFrame      : null,       // temp hold last frame loaded so you can display the gif as it loads\n        image          : null,       // the current image at the currentFrame\n        playOnLoad     : true,       // if true starts playback when loaded\n        // functions\n        load           : loadGif,    // call this to load a file\n        cancel         : cancelLoad, // call to stop loading\n        play           : play,       // call to start play\n        pause          : pause,      // call to pause\n        seek           : seek,       // call to seek to time\n        seekFrame      : seekFrame,  // call to seek to frame\n        togglePlay     : togglePlay, // call to toggle play and pause state\n    }\n    return gif;\n}\n\n\nexport default GIF;\n\n\n\n/*=========================================================================\nEnd of gif reader\n\n*/","\nimport GIF from \"./gifService\";\nexport default class GifWrapper {\n    constructor () {\n        \n        this.data = GIF();\n        this.playing = false;\n        this.startTime = 0;\n        this.lastIndex = 0\n        this.playingOnce = false;\n    }\n    load (img) {\n        this.url = img.getAttribute('src');\n        this.data.load(this.url);\n    }\n    play() {\n        this.playing = true;\n        this.startTime = Date.now();\n    }\n    playOnce() {\n        this.playingOnce = true;\n    }\n    getIndex() {\n        if (this.playing) {\n            let len = this.data.frameCount\n            let difTime = (Date.now() - this.startTime)%this.data.length;\n            let frameIndex = 0;\n            for(let i = 0;i<len - 1;i++) {\n                if(this.data.frames[i].time < difTime && difTime < this.data.frames[i+1].time)\n                    frameIndex = i+1;\n            }\n            if(frameIndex == len - 1 && this.playingOnce) {\n                this.playing = false;\n            }\n            this.lastIndex = frameIndex;\n            return frameIndex;\n        }else {\n            return this.lastIndex;\n        }\n        \n        \n    }\n    image ()  {\n        if (!this.data.loading)\n            return this.data.frames[this.getIndex()].image;\n    }\n    imageAt(index) {\n        if (!this.data.loading)\n            return this.data.frames[index].image;\n    }\n    getHeight() {\n        return this.data.height;\n    }\n    getWidth() {\n        return this.data.width;\n    }\n    isEnd() {\n        return !this.playing;\n    }\n} ","const { io } = require(\"socket.io-client\");\r\n\r\nexport default class SocketclientService {\r\n    constructor (port = 50001, host = \"localhost\") {\r\n        this.socket = io(\"http://\" + host + \":\" + port);\r\n    }\r\n    send(id, data, callback) {\r\n        this.socket.emit(id, data, (response) => {\r\n            if(callback!=undefined) {\r\n                callback(response);\r\n            }\r\n        });\r\n    }\r\n    addCallback(id, callBack) {\r\n        this.socket.on(id, callBack);\r\n    }\r\n    editConfig(name, value) {\r\n        let id = \"editConfig\";\r\n        let data = {};\r\n        data[name] = value;\r\n        this.send(id, data);\r\n    }\r\n    getConfig(name, callback) {\r\n        let id = \"getConfig\";\r\n        let data = {\r\n            param : name,\r\n        };\r\n        this.send(id, data, callback)\r\n        \r\n    }\r\n}\r\n\r\n//module.exports = SocketclientService;","/* eslint-disable */\nimport { random } from 'numeric';\nimport config from '../../../shared/config/config.yaml';\n\nimport DesignMazeService from \"./designMazeService\";\nimport {applyTransform, drawReturnedImage, rotate} from './drawUtils';\nimport GifWrapper from \"./gifWraper\";\nimport SocketclientService from \"./socketClientService\";\n\nconst WALL_WIDTH = config.moduleWidth;\nconst WALL_HEIGHT = config.moduleHeight;\n\nconst TAG_SIZE = config.tagSize;\nconst TAG_DIST = config.tagDistance;\n\nconst COIN_RADIUS = config.coinRadius;\n// const COIN_COLOR = config.coinColor;\n// const COIN_STROKE_COLOR = config.coinStrokeColor;\n\nconst ROBOT_RADIUS = config.robotRadius;\nconst BEGIN_TOLERENCE = config.beginTolerence;\nconst MAZE_WIDTH = config.mazeWidth;\nconst MAZE_HEIGHT = config.mazeHeight;\nconst ROBOT_HEIGHT = config.robotHeight;\nconst PROJX = config.projx;\nconst PROJY = config.projy;\nconst PROJZ = config.projz;\nconst MODULE_WIDTH = config.moduleWidth;\nconst SHOW_DEBUG_ROBOTS = config.showDebugRobots;\nconst BALLOON_RADIUS = config.balloonRadius;\nconst ROBOT_CENTER_X = 0; // config.robotCenterX;\nconst ROBOT_CENTER_Y = 0; // config.robotCenterY;\nconst VERSION = config.version;\nconst BUILD = config.build;\nconst PLAY_MENU = config.playMenu;\nconst CIRCLE_OPACITY = config.projectedCircleOpacity;\nconst CIRCLE_RADIUS = config.projectedCIrcleRadius;\nconst H = 1;\nconst W = 0;\n\n// Generate from dockerfile\nconst gameMasterHost = config.gameMasterHost || \"localhost\";\n\nexport default class GameMazeService\n{\n    constructor()\n    {\n        this.socketClient = new SocketclientService(50001, gameMasterHost);\n        this.gameState = {simulation : true};\n        this.cnv = null;\n\n        this.tags = [];\n        this.a = 0;\n\n        this.host = \"\";\n\n        // gifs\n        /* coin gif */\n        this.coin = new GifWrapper();\n\n        /* pass through a wall gif*/\n        this.passWall = [];\n\n        /* rocket gifs */\n        this.rocketGif = new GifWrapper();\n        this.bombBlueGif = new GifWrapper();\n        this.bombYellowGif = new GifWrapper();\n        this.killWaveGif = new GifWrapper();\n        this.wallExplosionGif = new GifWrapper();\n        this.dropBombPenalityGif = new GifWrapper();\n\n        /* robot explosion gif */\n        this.robotDead = [];\n        this.robotAlives = [ true, true, true, true ];\n        this.lastCirclePosition = [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ];\n        this.lastStampRobot = 0;\n        this.lastParse = 0;\n\n        // images\n        this.deadImg = {};\n        this.robotImg = {};\n        this.freezeEffectImg = {};\n        this.loser = {};\n        this.winner = {};\n        this.equality = {};\n        this.light = [ null, null ];\n        this.firetrail = {};\n\n        /* Maze drawer */\n        this.mazeDrawer = null;\n        this.coinsImg = [];\n\n        /* parallelograme*/\n        this.corners = {}; // config.mazeKeystoneOffset;\n        this.slectedCoin = \"tl\";\n        this.tl_d = [ 0, 0 ];\n        this.tr_d = [ 0, 0 ];\n        this.bl_d = [ 0, 0 ];\n        this.br_d = [ 0, 0 ];\n        this.keyResizeListenerRegistered = false;\n        this.socketClient\n            .getConfig(\"mazeKeystoneOffset\",\n                       (res) => {\n                           if (res.response != \"erreur\")\n                           {\n                               this.corners = res.value;\n                           }\n                       })\n\n            /* PRECSION CHECK */ // only available in real mode\n            this.markers = [];\n        if (PLAY_MENU)\n        {\n            this.loadMarkers();\n        }\n    }\n    loadMarkers()\n    {\n        this.markers = config.procisionCheckTags;\n        // load all markers images\n        for (let m of this.markers)\n        {\n            m[\"img\"] = new Image();\n            m[\"img\"].src = require(`../assets/markers/marker_${m.id}.png`);\n        }\n    }\n    loadImg()\n    {\n        this.light = [ document.getElementById(\"light1\"), document.getElementById(\"light2\") ];\n        this.deadImg = document.getElementById(\"dead\");\n        this.robotImg = document.getElementById(\"robot\");\n        this.winner = document.getElementById(\"winner\");\n        this.loser = document.getElementById(\"loser\");\n        this.equality = document.getElementById(\"equality\");\n        this.firetrail = document.getElementById(\"fire-trail\");\n        this.freezeEffectImg = document.getElementById(\"freeze-effect\");\n        this.positionIcon = document.getElementById(\"position-icon\");\n        // load coins\n        for (let i = 0; i <= 11; i++)\n        {\n            this.coinsImg.push(new Image());\n            this.coinsImg[i].src = require('../assets/design/coins/coin' + i + '.gif');\n        }\n        // load rocket\n        let rocketImage = new Image();\n        rocketImage.src = require('../assets/design/coins/rocket.gif');\n        this.coinsImg.push(rocketImage);\n\n        for (let i = 1; i <= 3; i++)\n        {\n            this.coinsImg.push(new Image());\n            this.coinsImg[i + 12].src = require('../assets/design/coins/bomb' + i + '.png');\n        }\n\n        let bombDroppedImageBlue = new Image();\n        bombDroppedImageBlue.src = require('../assets/design/coins/bombDroppedBlue.gif');\n        this.coinsImg.push(bombDroppedImageBlue);\n\n        let bombDroppedImageYellow = new Image();\n        bombDroppedImageYellow.src = require('../assets/design/coins/bombDroppedYellow.gif');\n        this.coinsImg.push(bombDroppedImageYellow);\n\n        let killWaveImage = new Image();\n        killWaveImage.src = require('../assets/images/killWave1.gif');\n        this.coinsImg.push(killWaveImage);\n\n        let wallExplosionImage = new Image();\n        wallExplosionImage.src = require('../assets/images/wallExplosion.gif');\n        this.coinsImg.push(wallExplosionImage);\n\n        let dropBombPenalityImage = new Image();\n        dropBombPenalityImage.src = require('../assets/images/dropBombPenality.gif');\n        this.coinsImg.push(dropBombPenalityImage);\n    }\n\n    loadGifs()\n    {\n        // get gif coin\n        let coinImg = document.getElementById(\"coin\");\n        let passWallImg = document.getElementById(\"pass-wall\");\n        let robotDeadImg = document.getElementById(\"robot-dead\");\n\n        this.coin.load(coinImg);\n        this.rocketGif.load(this.coinsImg[12]);\n        this.rocketGif.play();\n\n        this.bombBlueGif.load(this.coinsImg[16]);\n        this.bombBlueGif.play();\n\n        this.bombYellowGif.load(this.coinsImg[17]);\n        this.bombYellowGif.play();\n\n        this.killWaveGif.load(this.coinsImg[18]);\n        this.killWaveGif.play();\n\n        this.wallExplosionGif.load(this.coinsImg[19]);\n        this.wallExplosionGif.play();\n\n        this.dropBombPenalityGif.load(this.coinsImg[20]);\n        this.dropBombPenalityGif.play();\n\n        // pass wall gif and robotDeath gifs\n        for (let i = 0; i < 4; i++)\n        {\n            this.passWall.push(new GifWrapper());\n            this.passWall[i].load(passWallImg);\n            this.passWall[i].play();\n\n            this.robotDead.push(new GifWrapper());\n            this.robotDead[i].load(robotDeadImg);\n            this.robotDead[i].playOnce();\n        }\n    }\n\n    completeMaze(ctx)\n    {\n        this.socketClient.send(\"getGameState\", {}, (data) => {\n            if (this.mazeDrawer == null)\n            {\n                this.mazeDrawer = new DesignMazeService(data.host);\n            }\n            this.host = data.host;\n            this.setNewGameState(data);\n            this.parseGame(this.gameState, ctx);\n        });\n    }\n\n    startUpdating(mazeCanvas, gameStateRef)\n    {\n        // var start = Date.now();\n        this.gameState = gameStateRef;\n        this.cnv = mazeCanvas;\n        var ctx = mazeCanvas.getContext('2d');\n        this.updateMazeSize(ctx);\n        this.completeMaze(ctx);\n\n        // load images :\n        this.loadImg();\n\n        // load all gifs\n        this.loadGifs();\n\n        window.setInterval(() => { this.completeMaze(ctx); }, 50);\n\n        window.setTimeout(() => {\n            this.updateMazeSize(ctx);\n            if (!this.gameState.simulation)\n            {\n                this.registerTransformEvents();\n            }\n        }, 3000);\n        window.addEventListener(\"resize\", () => {\n            this.updateMazeSize(ctx);\n            if (!this.gameState.simulation)\n            {\n                this.registerTransformEvents();\n            }\n        });\n        this.updateMazeSize(ctx);\n    }\n\n    // maze keystopne management\n    registerTransformEvents()\n    {\n        var keyResizeListener =\n            (e) => {\n                if (e.key == \"ArrowRight\")\n                {\n                    this.corners[this.slectedCoin][0] += 1;\n                    this.socketClient.editConfig(\"mazeKeystoneOffset\", this.corners);\n                }\n                else if (e.key == \"ArrowLeft\")\n                {\n                    this.corners[this.slectedCoin][0] -= 1;\n                    this.socketClient.editConfig(\"mazeKeystoneOffset\", this.corners);\n                }\n                else if (e.key == \"ArrowUp\")\n                {\n                    this.corners[this.slectedCoin][1] -= 1;\n                    this.socketClient.editConfig(\"mazeKeystoneOffset\", this.corners);\n                }\n                else if (e.key == \"ArrowDown\")\n                {\n                    this.corners[this.slectedCoin][1] += 1;\n                    this.socketClient.editConfig(\"mazeKeystoneOffset\", this.corners);\n                }\n                else if (e.key.toLowerCase() == \"a\")\n                {\n                    this.slectedCoin = \"tl\";\n                }\n                else if (e.key.toLowerCase() == \"z\")\n                {\n                    this.slectedCoin = \"tr\";\n                }\n                else if (e.key.toLowerCase() == \"q\")\n                {\n                    this.slectedCoin = \"bl\";\n                }\n                else if (e.key.toLowerCase() == \"s\")\n                {\n                    this.slectedCoin = \"br\";\n                }\n                else if (e.key.toLowerCase() == \" \")\n                {\n                    this.initTransformRef();\n                    this.initTransformCorners();\n                    this.socketClient.editConfig(\"mazeKeystoneOffset\",\n                                                 {bl : [ 0, 0 ], br : [ 0, 0 ], tl : [ 0, 0 ], tr : [ 0, 0 ]});\n                }\n                // save config\n\n                // topLeft.style.top = coins.tl[1] + \"px\";\n                // topLeft.style.left = coins.tl[0] + \"px\";\n\n                this.applyKeystoneTransform();\n            }\n        // this.corners = config.mazeKeystoneOffset;\n        if (this.keyResizeListenerRegistered)\n        {\n\n            document.removeEventListener(\"keydown\", keyResizeListener);\n            this.keyResizeListenerRegistered = false;\n        }\n\n        this.slectedCoin = \"tl\";\n\n        this.initTransformRef();\n\n        let checkCor =\n            this.corners.tl.reduce((a, b) => a + b, 0) == 0 && this.corners.tr.reduce((a, b) => a + b, 0) == 0 &&\n            this.corners.br.reduce((a, b) => a + b, 0) == 0 && this.corners.bl.reduce((a, b) => a + b, 0) == 0;\n        if (checkCor || this.gameState.simulation)\n        {\n            this.initTransformCorners();\n        }\n\n        this.applyKeystoneTransform();\n\n        if (!this.keyResizeListenerRegistered)\n        {\n            document.addEventListener(\"keydown\", keyResizeListener);\n            this.keyResizeListenerRegistered = true;\n        }\n    }\n    applyKeystoneTransform()\n    {\n\n        var src = [ this.tl_d, this.tr_d, this.bl_d, this.br_d ];\n        var dst = [ this.corners.tl, this.corners.tr, this.corners.bl, this.corners.br ];\n        applyTransform(\"transform\", src, dst, () => {});\n    }\n    initTransformCorners()\n    {\n        this.corners = {\n            tl : this.tl_d.map((x) => x),\n            tr : this.tr_d.map((x) => x),\n            bl : this.bl_d.map((x) => x),\n            br : this.br_d.map((x) => x),\n        };\n    }\n    initTransformRef()\n    {\n        var maze = document.getElementById(\"transform\");\n        this.tl_d = [ maze.offsetLeft, maze.offsetTop ];\n        this.tr_d = [ maze.offsetLeft + maze.offsetWidth, maze.offsetTop ];\n        this.bl_d = [ maze.offsetLeft, maze.offsetTop + maze.offsetHeight ];\n        this.br_d = [ maze.offsetLeft + maze.offsetWidth, maze.offsetTop + maze.offsetHeight ];\n    }\n    updateMazeSize(ctx)\n    {\n        ctx.canvas.width = window.innerHeight - 2;\n        ctx.canvas.height = window.innerHeight - 2;\n        var transform = document.getElementById(\"transform\");\n        var maze = document.getElementById(\"maze\");\n        transform.style.height = (window.innerHeight - 2) + \"px\";\n        transform.style.width = (window.innerHeight - 2) + \"px\";\n        transform.style.top = maze.offsetTop + \"px\";\n        transform.style.left = maze.offsetLeft + \"px\";\n    }\n\n    updateTagPosition(rh, rw)\n    {\n        let mid = window.innerWidth / 2;\n\n        let positions = [\n            [ mid - (MAZE_WIDTH / 2 + TAG_DIST + TAG_SIZE) * rw, 0 ],\n            [ mid + (MAZE_WIDTH / 2 + TAG_DIST) * rw, 0 ],\n            [ mid + (MAZE_WIDTH / 2 + TAG_DIST) * rw, (MAZE_HEIGHT - TAG_SIZE) * rh ],\n            [ mid - (MAZE_WIDTH / 2 + TAG_DIST + TAG_SIZE) * rw, (MAZE_HEIGHT - TAG_SIZE) * rh ],\n        ];\n        for (let i = 0; i < this.tags.length; i++)\n        {\n            this.tags[i].style.width = rw * TAG_SIZE + 'px';\n            this.tags[i].style.height = rh * TAG_SIZE + 'px';\n            this.tags[i].style.left = positions[i][0] + 'px';\n            this.tags[i].style.top = positions[i][1] + 'px';\n        }\n    }\n    mergeState(gameState, update)\n    {\n\n        for (let coin of update['coins'])\n            gameState['coins'][coin[0][1]][coin[0][0]] = coin[1];\n\n        // gameModules = gameState['modules']\n        for (let module of update['modules'])\n            gameState['modules'][module[0][1]][module[0][0]] = module[1];\n\n        gameState['teams'] = update['teams'];\n        gameState['movingObj'] = update[\"movingObj\"];\n\n        return gameState;\n    }\n    parseGame(gs, ctx)\n    {\n        // reduction coefficient\n\n        var cnvRect = ctx.canvas.getBoundingClientRect();\n        var rh = cnvRect.height / (gs[\"modules\"].length * WALL_HEIGHT);\n        var rw = cnvRect.width / (gs[\"modules\"][0].length * WALL_WIDTH);\n        ctx.clearRect(0, 0, cnvRect.height, cnvRect.width);\n        // this.updateTagPosition(rh, rw);\n\n        if (gs.phase == \"PLAY\")\n        {\n            this.drawMaze(gs, ctx, rh, rw);\n            this.drawScore(gs, ctx, rh, rw);\n            this.drawRobots(gs, ctx, rh, rw);\n        }\n        else if (gs.phase == \"REGISTER\" || gs.phase == \"REGISTER_SIM\")\n        {\n            this.drawRegisterMode(gs, ctx, rh, rw);\n            this.drawRobots(gs, ctx, rh, rw);\n            if (gs.calibData != undefined && gs.calibData.length > 0)\n            {\n                this.drawCalibData(gs, ctx, rh, rw);\n            }\n        }\n        else if (gs.phase == \"END\")\n        {\n            // this.drawMaze(gs, ctx, rh, rw);\n            this.drawEndMaze(gs, ctx, rh, rw);\n            this.drawRobots(gs, ctx, rh, rw);\n            // this.drawEnd(gs, ctx, rh, rw);\n            this.drawEnd(gs, ctx, rh, rw);\n        }\n        else if (gs.phase == \"CALIBRATION\")\n        {\n            let index = gs['calibrationIndex'];\n            this.drawChessBoard(ctx, rw, rh, index);\n        }\n        else if (gs.phase == \"PRECISION_CHECK\")\n        {\n            this.drawPrecisionCheckMarkers(gs, ctx, rh, rw);\n        }\n        if (!this.gameState.simulation)\n        {\n            let maze = document.getElementById(\"maze\");\n            document.getElementById(\"transform\").src = maze.toDataURL('image/gif');\n        }\n    }\n    drawChessBoard(ctx, rw, rh, index)\n    {\n        let pos = [\n            [ 0.200, 0.200, 0 ], [ 1.000, 0.200, 0 ], [ 1.700, 0.200, 0 ],\n            [\n                1.700,\n                1.000,\n            ],\n            [ 1.000, 1.000, 0 ], [ 0.200, 1.000, 0 ], [ 0.200, 2.100, 0 ], [ 1.000, 2.100, 0 ], [ 1.700, 2.100, 0 ],\n            [ 1.600, 0.600, 0.130 ], [ 2.100, 0.200, 0.050 ], [ 2.800, 1.900, 0.130 ], [ 0.800, 1.500, 0.050 ]\n        ];\n        if (index < pos.length)\n        {\n            ctx.save();\n            let chessboard = document.getElementById(\"chessboard\");\n            let chessWidth = chessboard.naturalWidth * 0.26\n            let chessHeight = chessboard.naturalHeight * 0.26\n            ctx.translate(pos[index][0] * rw, pos[index][1] * rh);\n            ctx.rotate(pos[index][2] * Math.PI / 180);\n            ctx.drawImage(chessboard, 0, 0, chessWidth, chessHeight);\n            // ctx.translate(-ctx.canvas.width/2 ,-ctx.canvas.height/2);\n\n            ctx.restore();\n        }\n    }\n\n    drawMovingObjects(gs, ctx, rh, rw)\n    {\n        for (let obj of gs[\"movingObj\"])\n        {\n            let pos = obj[\"pos\"]\n                // draw danger zone\n                let i = obj[\"inDanger\"][0];\n            let j = obj[\"inDanger\"][1];\n            ctx.fillStyle = \"red\";\n            ctx.beginPath();\n            ctx.rect(i * MODULE_WIDTH * rw, (MAZE_HEIGHT - (j + 1) * MODULE_WIDTH) * rh, MODULE_WIDTH * rw,\n                     MODULE_WIDTH * rh);\n            ctx.fill();\n            // draw rocket\n            drawReturnedImage(ctx, this.firetrail, pos.x * rw, (MAZE_HEIGHT - pos.y) * rh, 1.5 * rw, 0.3 * rh,\n                              pos.a / Math.PI * 180, -1.5 * rw);\n            drawReturnedImage(ctx, this.rocketGif.image(), pos.x * rw, (MAZE_HEIGHT - pos.y) * rh, 0.35 * rw, 0.35 * rh,\n                              pos.a / Math.PI * 180);\n        }\n    }\n    drawKillWaveObjects(gs, ctx, rh, rw)\n    {\n        const killwaveImgRadiusScaler = 0.30\n        for (let obj of gs[\"updatableObj\"])\n        {\n            if (obj[\"type\"] != \"KILLWAVE\")\n                continue;\n\n            let pos = obj[\"pos\"]\n\n            for (let danger of obj[\"inDanger\"])\n            {\n                let i = danger[0];\n                let j = danger[1];\n                ctx.fillStyle = \"rgba(227, 24, 11, 0.24)\";\n                ctx.beginPath();\n                ctx.rect(i * MODULE_WIDTH * rw, (MAZE_HEIGHT - (j + 1) * MODULE_WIDTH) * rh, MODULE_WIDTH * rw,\n                         MODULE_WIDTH * rh);\n                ctx.fill();\n            }\n\n            drawReturnedImage(ctx, this.killWaveGif.image(), pos.x * rw, (MAZE_HEIGHT - pos.y) * rh,\n                              killwaveImgRadiusScaler * rw, killwaveImgRadiusScaler * rh, 0);\n        }\n    }\n    drawBombObjects(gs, ctx, rh, rw)\n    {\n        const bombImgRadiusScaler = 0.16\n\n        for (let obj of gs[\"updatableObj\"])\n        {\n            if (obj[\"type\"] != \"BOMB\")\n                continue;\n\n            let pos = obj[\"pos\"]\n\n            for (let danger of obj[\"inDanger\"])\n            {\n                let i = danger[0];\n                let j = danger[1];\n                ctx.fillStyle = \"rgba(227, 24, 11, 0.24)\";\n                ctx.beginPath();\n                ctx.rect(i * MODULE_WIDTH * rw, (MAZE_HEIGHT - (j + 1) * MODULE_WIDTH) * rh, MODULE_WIDTH * rw,\n                         MODULE_WIDTH * rh);\n                ctx.fill();\n            }\n\n            let color = obj[\"color\"];\n\n            let image = color == \"rgb(36, 86, 177)\" ? this.bombBlueGif.image() : this.bombYellowGif.image();\n\n            drawReturnedImage(ctx, image, pos.x * rw, (MAZE_HEIGHT - pos.y) * rh, bombImgRadiusScaler * rw, bombImgRadiusScaler * rh, 0);\n        }\n    }\n    drawDrawableObjects(gs, ctx, rh, rw)\n    {\n        for (let obj of gs[\"drawableObj\"])\n        {\n            let image;\n            if (obj[\"type\"] == \"WallBreakObject\")\n                image = this.wallExplosionGif.imageAt(obj[\"frame\"]);\n            else if (obj[\"type\"] == \"DropBombPenality\")\n                image = this.dropBombPenalityGif.imageAt(obj[\"frame\"]);\n            else\n                continue;\n            let pos = obj[\"pos\"];\n\n            drawReturnedImage(ctx, image, pos.x * rw, (MAZE_HEIGHT - pos.y) * rh, obj[\"scale\"] * rw, obj[\"scale\"] * rh, pos.a / Math.PI * 180);\n        }\n    }\n    drawMaze(gs, ctx, rh, rw)\n    {\n        let walls = [ \"left\", \"top\", \"right\", \"bottom\" ];\n        let ilen = gs.coins[0].length;\n        let jlen = gs.coins.length;\n        let moduleColor = {};\n        for (let team of gs[\"teams\"])\n        {\n            moduleColor[team[\"name\"]] = team[\"color\"];\n        }\n        // let coinImg = document.getElementById(\"coin\");\n        // daw white square\n        ctx.fillStyle = \"rgba(255,255,255,0.9)\";\n        if (gs.darkMode)\n        {\n            ctx.fillStyle = \"rgba(0,0,0,0.9)\";\n        }\n        ctx.beginPath();\n        ctx.rect(gs.shrinkCoef * MODULE_WIDTH * rw, gs.shrinkCoef * MODULE_WIDTH * rh,\n                 (this.prc(1, W) - gs.shrinkCoef * MODULE_WIDTH * 2) * rw,\n                 (this.prc(1, H) - gs.shrinkCoef * MODULE_WIDTH * 2) * rw);\n        // ctx.rect(0, gs.shrinkCoef*MODULE_WIDTH*rh, (this.prc(1, W) - gs.shrinkCoef*MODULE_WIDTH*2)*rw, (this.prc(1,\n        // H) - gs.shrinkCoef*MODULE_WIDTH*2)*rw);\n        ctx.fill();\n        /*ctx.beginPath();\n\n        ctx.rect(0, 0, this.prc(1, W)*rw, this.prc(1, H)*rw);\n        ctx.fill();*/\n\n        // DRAW POSSESSION\n        for (let i = 0; i < ilen; i++)\n        {\n            for (let j = 0; j < jlen; j++)\n            {\n                let module = gs.modules[j][i];\n\n                if (module[\"possession\"] in moduleColor && module[\"enable\"])\n                {\n                    ctx.fillStyle = moduleColor[module[\"possession\"]];\n                    ctx.beginPath();\n                    ctx.rect(i * MODULE_WIDTH * rw, (MAZE_HEIGHT - (j + 1) * MODULE_WIDTH) * rh, MODULE_WIDTH * rw,\n                             MODULE_WIDTH * rh);\n                    ctx.fill();\n                }\n            }\n        }\n        // DRAW Bomb OBJECTS + DANGER ZONE\n        this.drawBombObjects(gs, ctx, rh, rw);\n        // DRAW COINS\n        for (let i = 0; i < ilen; i++)\n        {\n            for (let j = 0; j < jlen; j++)\n            {\n                let coin = gs.coins[j][i];\n                let module = gs.modules[j][i];\n\n                if (coin != null && module.enable)\n                {\n                    let P = [ (coin[\"position\"][\"x\"]) * rw, (MAZE_HEIGHT - coin[\"position\"][\"y\"]) * rh ];\n                    if (!this.coin.loading)\n                        drawReturnedImage(ctx, this.coinsImg[coin['design']], P[0], P[1], COIN_RADIUS * rw * 2,\n                                          COIN_RADIUS * rw * 2, 45);\n                }\n            }\n        }\n\n        this.drawKillWaveObjects(gs, ctx, rh, rw);\n        // DRAW WALLS\n        this.mazeDrawer.draw(gs, ctx, rh, rw);\n        this.drawDrawableObjects(gs, ctx, rh, rw);\n        // DRAW MOVING OBJECTS\n        this.drawMovingObjects(gs, ctx, rh, rw);\n    }\n    drawRobots(gs, ctx, rh, rw)\n    {\n        //#show robots :\n        // browse teams\n        // var score = '';\n        let ri = 0;\n        let ti = 0;\n        for (let team of gs[\"teams\"])\n        {\n            // let color = team[\"color\"];\n            // let i = 0;\n            for (let robot of team[\"robots\"])\n            {\n                // score += '<p>robot ' + i +' : '+robot['score']+'</p>';\n                // let A = [(robot[\"position\"][\"x\"] - ROBOT_RADIUS)*rw, w(robot[\"position\"][\"y\"] - ROBOT_RADIUS)*rh];\n                // let B = [(robot[\"position\"][\"x\"] + ROBOT_RADIUS)*rw, (robot[\"position\"][\"y\"] + ROBOT_RADIUS)*rh];\n                let P = [ robot[\"position\"][\"x\"] * rw, MAZE_HEIGHT * rh - robot[\"position\"][\"y\"] * rh ];\n                // TODO self.cnv.create_oval(A, B, fill=\"white\", outline=color, width=3)\n                // small tail\n                // let x = (robot[\"position\"][\"x\"] - ROBOT_RADIUS)*rw;\n                let a = robot[\"position\"][\"a\"];\n                let D = [ robot[\"position\"][\"x\"] * rw, MAZE_HEIGHT * rh - robot[\"position\"][\"y\"] * rh ];\n                let C = [ -ROBOT_RADIUS * rw, 0 ]\n                C = [ C[0] * Math.cos(a) + C[1] * Math.sin(a) + D[0], C[0] * Math.sin(a) - C[1] * Math.cos(a) + D[1] ];\n\n                // TODO self.cnv.create_line(D, C, fill=color, width=3)\n                if (SHOW_DEBUG_ROBOTS)\n                {\n                    ctx.lineWidth = 2;\n                    ctx.fillStyle = robot.highlight;\n\n                    ctx.strokeStyle = team[\"color\"];\n\n                    ctx.beginPath();\n                    ctx.arc(P[0], P[1], ROBOT_RADIUS * rw, 0, 2 * Math.PI, true);\n                    ctx.fill();\n                    ctx.stroke();\n\n                    ctx.lineWidth = 2;\n                    ctx.strokeStyle = team[\"color\"];\n                    ctx.moveTo(P[0], P[1]);\n                    ctx.lineTo(C[0], C[1]);\n                    ctx.stroke();\n                }\n                else\n                {\n                    drawReturnedImage(ctx, this.light[ti], P[0], P[1], 0.3 * rw, 0.3 * rh, 0);\n                }\n\n                if (robot[\"freezed\"][\"isEffective\"]) {\n                    let l = 0.36 * rw;\n                    let h = 0.36 * rh;\n                    let freezeRotation = robot[\"freezed\"][\"imgRotation\"] * 360;\n                    drawReturnedImage(ctx, this.freezeEffectImg, P[0], P[1], l, h, freezeRotation);\n                } else {\n                    let penActive = false; // penalitis active\n                    for (let p of robot[\"penalities\"])\n                    {\n                        if (p[\"isEffective\"])\n                            penActive = true;\n                    }\n                    if (penActive)\n                    {\n                        // draw penality warning\n                        let r = this.passWall[ri].getHeight() / this.passWall[ri].getWidth();\n                        let l = 0.65 * rw;\n                        let h = l * r;\n    \n                        ctx.drawImage(this.passWall[ri].image(), P[0] - l / 2, P[1] - h / 2, l, h);\n                    }\n                }\n                // if robot killed\n                if (robot[\"lifes\"] == 0)\n                {\n                    if (this.robotAlives[ri])\n                    {\n                        this.robotAlives[ri] = false;\n                        this.robotDead[ri].play();\n                    }\n                    let r = this.robotDead[ri].getHeight() / this.robotDead[ri].getWidth();\n                    let l = 0.65 * rw;\n                    let h = l * r;\n\n                    if (this.robotDead[ri].isEnd())\n                    {\n                        l = 0.4 * rw;\n                        h = 0.4 * rh;\n                        ctx.drawImage(this.deadImg, P[0] - l / 2, P[1] - h / 2, l, h);\n                    }\n                    else\n                    {\n                        ctx.drawImage(this.robotDead[ri].image(), P[0] - l / 2, P[1] - h, l, h);\n                    }\n                }\n                if (gs.simulation)\n                {\n                    drawReturnedImage(ctx, this.robotImg, P[0], P[1], 0.36 * rw, 0.12 * rh, a / Math.PI * 180);\n                    if (robot[\"lifes\"] > 0)\n                    {\n                        // draw balloon\n                        ctx.fillStyle = team[\"color\"];\n                        ctx.beginPath();\n                        ctx.arc(P[0], P[1], BALLOON_RADIUS * rw, 0, 2 * Math.PI, true);\n                        ctx.fill();\n                        let size = 0.06 * rw;\n                        ctx.fillStyle = \"black\";\n                        ctx.font = 'bold ' + size + 'px sans-serif';\n                        ctx.textAlign = 'center';\n                        ctx.textBaseline = 'middle';\n                        ctx.fillText(robot[\"inventory\"], P[0], P[1]);\n                    }\n                }\n                else if (!gs.darkMode)\n                {\n                    // draw white filled circle :  the first circle\n                    let r = PROJZ / (PROJZ - ROBOT_HEIGHT);\n                    let pR = [ 0, 0 ];\n                    pR[0] = robot[\"position\"][\"x\"]; // + Math.cos(a)*(-ROBOT_CENTER_Y) + Math.sin(a)*(-ROBOT_CENTER_X);\n                    pR[1] = robot[\"position\"][\"y\"]; // + Math.sin(a)*(-ROBOT_CENTER_Y) - Math.cos(a)*(-ROBOT_CENTER_X)\n                    P = [ ((pR[0] - PROJX) * r + PROJX) * rw, MAZE_HEIGHT * rh - ((pR[1] - PROJY) * r + PROJY) * rh ];\n                    ctx.lineWidth = 2;\n                    // draw the small circle\n                    ctx.fillStyle = \"white\"\n                    ctx.strokeStyle = \"white\"\n                    ctx.beginPath();\n                    ctx.arc(P[0], P[1], 0.08 * rw, 0, 2 * Math.PI, true);\n                    ctx.fill();\n                    ctx.stroke()\n                    // draw the big circle\n                    ctx.fillStyle = `rgba(255, 255, 255, ${CIRCLE_OPACITY})`\n                    ctx.strokeStyle = `rgba(255, 255, 255, ${CIRCLE_OPACITY})`\n                    ctx.beginPath();\n                    ctx.arc(P[0], P[1], CIRCLE_RADIUS * rw, 0, 2 * Math.PI, true);\n                    ctx.fill();\n                    ctx.stroke()\n                    if (gs.phase == \"PLAY\" && robot.lifes > 0)\n                    {\n                        // estimate the second circle\n                        let diffTime = 0.09; //(gs.stamp - this.lastStampRobot)/1000; //to second\n                        // convert to speed (x, y)\n                        let diffX = robot.position.x - robot.lastPosition.x;\n                        let speedX = (robot.position.x - robot.lastPosition.x) / diffTime;\n                        let speedY = (robot.position.y - robot.lastPosition.y) / diffTime;\n                        // time now (use stampref)\n                        let time = Date.now();\n                        // get the late\n                        let late = (time - gs.stamp) / 1000;\n                        /*console.log(\"stamp = \" + String(gs.stamp));\n                        console.log(\"lastStamp = \" + this.lastStampRobot);\n                        console.log(\"late(from stamp) = \" + late);\n                        console.log(\"diffTime = \" + diffTime);\n                        console.log(\"diffSpeed = \" + speedX);\n                        console.log(\"diff distance X = \" + diffX);\n                        console.log(\"position x = \" + robot.position.x);\n                        console.log(\"last position x = \" + robot.lastPosition.x)*/\n\n                        // fix new position\n                        let P2 = [ 0, 0 ];\n                        if (Math.abs(diffX) > 0)\n                        {\n                            let pR2 = [ 0, 0 ];\n                            if (late > 0.5)\n                                late = 0.5;\n                            pR2[0] = pR[0] + speedX * late;\n                            pR2[1] = pR[1] + speedY * late;\n                            P2 = [\n                                ((pR2[0] - PROJX) * r + PROJX) * rw,\n                                MAZE_HEIGHT * rh - ((pR2[1] - PROJY) * r + PROJY) * rh\n                            ];\n                            this.lastCirclePosition[ri] = P2;\n                        }\n                        else\n                        {\n                            P2 = this.lastCirclePosition[ri];\n                        }\n                        ctx.beginPath();\n                        ctx.arc(P2[0], P2[1], 0.08 * rw, 0, 2 * Math.PI, true);\n                        ctx.fill();\n                        ctx.stroke()\n\n                        ctx.lineWidth = 0.16 * rw;\n                        ctx.strokeStyle = \"white\";\n                        ctx.beginPath();\n                        ctx.moveTo(P[0], P[1]);\n                        ctx.lineTo(P2[0], P2[1]);\n                        ctx.stroke();\n                    }\n                }\n\n                ri++;\n            }\n            ti++;\n        }\n        if (gs.stamp != this.lastParse)\n        {\n            this.lastStampRobot = this.lastParse;\n        }\n        this.lastParse = gs.stamp;\n        /*const rectSize = 60;\n        const rectPoses = [\n            [70, 70],[2870, 70],[70, 2870],[2870, 2870]\n        ];\n        for (const restPos of rectPoses) {\n            ctx.fillStyle = \"rgb(0, 0, 255)\";\n            ctx.rect(restPos[0]*rw, restPos[1]*rh, rectSize*rw, rectSize*rh);\n            ctx.fill();\n        }*/\n        // set the score\n\n        // $(\"#score\").html('<p>score:</p>' + score);\n    }\n    drawCalibData(gs, ctx, rh, rw)\n    {\n        ctx.fillStyle = \"rgba(255,255,255,0.7)\";\n        if (gs.darkMode)\n        {\n            ctx.fillStyle = \"rgba(0,0,0,0.7)\";\n        }\n        ctx.beginPath();\n        ctx.rect(gs.shrinkCoef * MODULE_WIDTH * rw, gs.shrinkCoef * MODULE_WIDTH * rh,\n                 (this.prc(1, W) - gs.shrinkCoef * MODULE_WIDTH * 2) * rw,\n                 (this.prc(1, H) - gs.shrinkCoef * MODULE_WIDTH * 2) * rw);\n        ctx.fill();\n        // draw the calib\n        if (gs.calibData != undefined)\n        {\n            let f = new Intl.NumberFormat(\"en\", {\n                maximumFractionDigits : 3,\n            });\n            ctx.fillStyle = \"black\";\n            if (gs.darkMode)\n            {\n                ctx.fillStyle = \"white\"\n            }\n            ctx.font = this.prc(0.03, H) * rh + 'px sans-serif';\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'top';\n\n            for (let data of gs.calibData)\n            {\n                this.drawAngleForCalibData(gs, ctx, rh, rw, data['id'])\n                ctx.fillText(`dx: ${f.format(data.dx)}; dy: ${f.format(data.dy)}; da: 0`, this.prc(0.01, W) * rw,\n                             this.prc(0.75, H) * rh);\n            }\n        }\n    }\n    drawAngleForCalibData(gs, ctx, rh, rw, id)\n    {\n        for (let team of gs[\"teams\"])\n        {\n            for (let robot of team[\"robots\"])\n            {\n                if (robot[\"id\"] == id)\n                {\n                    let P = [ robot[\"position\"][\"x\"] * rw, MAZE_HEIGHT * rh - robot[\"position\"][\"y\"] * rh ];\n                    drawReturnedImage(ctx, this.positionIcon, P[0], P[1], 0.7 * rw, 0.7 * rh,\n                                      robot[\"position\"][\"a\"] / Math.PI * 180);\n                }\n            }\n        }\n    }\n    drawPrecisionCheckMarkers(gs, ctx, rh, rw)\n    {\n        ctx.fillStyle = \"rgba(255,255,255,1)\";\n        ctx.beginPath();\n        ctx.rect(gs.shrinkCoef * MODULE_WIDTH * rw, gs.shrinkCoef * MODULE_WIDTH * rh,\n                 (this.prc(1, W) - gs.shrinkCoef * MODULE_WIDTH * 2) * rw,\n                 (this.prc(1, H) - gs.shrinkCoef * MODULE_WIDTH * 2) * rw);\n        ctx.fill();\n        console.log(gs.precisionCheck)\n        if (gs.precisionCheck.size != undefined)\n        {\n            for (let marker of this.markers)\n            {\n                drawReturnedImage(ctx, marker.img, marker.pos[0] * rw, (MAZE_HEIGHT - marker.pos[1]) * rh,\n                                  gs.precisionCheck.size * rw, gs.precisionCheck.size * rh,\n                                  gs.precisionCheck.angle / Math.PI * 180);\n            }\n        }\n    }\n    drawMarkers(gs, ctx, rh, rw)\n    {\n        if (gs.drawTag && !gs.mazeTagDetected)\n        {\n            for (let tag in gs[\"tags\"])\n            {\n                let pos = gs[\"tags\"][tag];\n                // figure the tag poition\n                let position =\n                    [\n                        this.prc(pos[0], W) * rw + gs.tagDistance * pos[2] * rw,\n                        MAZE_HEIGHT * rh - this.prc(pos[1], H) * rh - gs.tagTopDistance * pos[3] * rh,\n                    ]\n                    // Draw a white square\n                    let squareSize = gs.tagSize + gs.tagSize / 3;\n                ctx.fillStyle = \"rgba(255,255,255,1)\";\n                ctx.beginPath();\n                ctx.rect(position[0] - squareSize / 2 * rw, position[1] - squareSize / 2 * rh, squareSize * rw,\n                         squareSize * rh);\n                ctx.fill();\n                // Draw the tag\n                let img = new Image();\n                img.src = require(`../assets/markers/marker_${tag}.png`);\n                drawReturnedImage(ctx, img, position[0], position[1], gs.tagSize * rh, gs.tagSize * rw, 0);\n            }\n        }\n    }\n    drawRegisterMode(gs, ctx, rh, rw)\n    {\n        let robotLength = 0;\n        for (let team of gs[\"teams\"])\n        {\n            for (let robot of team[\"robots\"])\n            {\n                robotLength++;\n            }\n        }\n\n        // init alives\n        this.robotAlives = [ true, true, true, true ];\n        // draw rect\n        ctx.fillStyle = \"rgba(0,0,0,0)\"; // if no robot scanned show a transparent background\n        if (robotLength > 0 || gs.phase == \"REGISTER_SIM\")\n        {\n            ctx.fillStyle = \"rgb(239, 192, 48)\";\n            if (gs.darkMode)\n            {\n                ctx.fillStyle = \"black\"\n            }\n        }\n\n        ctx.beginPath();\n        ctx.rect(0, 0, this.prc(1, W) * rw, this.prc(1, H) * rw);\n        ctx.fill();\n\n        this.drawVersion(ctx, rh, rw);\n        this.drawHostName(gs, ctx, rh, rw);\n\n        // draw delimitations lines\n        let points = [\n            [ this.prc(0, W) * rw, this.prc(0, H) * rh ], [ this.prc(0, W) * rw, this.prc(1, H) * rh ],\n            [ this.prc(1, W) * rw, this.prc(1, H) * rh ], [ this.prc(1, W) * rw, this.prc(0, H) * rh ]\n        ];\n        let lines =\n            [ [ points[0], points[1] ], [ points[1], points[2] ], [ points[2], points[3] ], [ points[3], points[0] ] ];\n        ctx.lineWidth = 15;\n        ctx.strokeStyle = \"rgb(38, 178, 178)\";\n        for (let line of lines)\n        {\n            ctx.beginPath();\n            ctx.moveTo(line[0][0], line[0][1]);\n            ctx.lineTo(line[1][0], line[1][1]);\n            ctx.stroke();\n        }\n\n        if (robotLength > 0 || gs.phase == \"REGISTER_SIM\")\n        {\n            // draw only if at least one robot is scanned\n            this.drawPlaceYourRobot(ctx, rh, rw);\n            this.drawExotecLogo(ctx, rh, rw);\n            this.drawBeginPositions(gs, ctx, rw, rh);\n            this.drawExolegendLogo(ctx, rh, rw);\n        }\n\n        this.drawMarkers(gs, ctx, rh, rw);\n    }\n\n    setNewGameState(gs)\n    {\n        for (let key in gs)\n        {\n            this.gameState[key] = gs[key];\n        }\n    }\n    drawScore(gs, ctx, rh, rw)\n    {\n        if (gs.shrinkCoef >= 1 && !gs.simulation)\n        {                                            //\n            var darkYellow = \"rgba(165, 124, 1, 1)\"; // gs.teams[0].color;\n            var darkBlue = \"rgba(16, 116, 150, 1)\";  // gs.teams[1].color;\n            var background = \"white\";\n            if (gs.darkMode)\n            {\n                background = \"black\";\n            }\n\n            let scoreTeam1 = gs.teams[0].score;\n            let scoreTeam2 = gs.teams[1].score;\n\n            ctx.lineWidth = \"2\";\n\n            ctx.font = this.prc(0.03, H) * rh + 'px sans-serif';\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'top';\n\n            // ------------------------------------  SCORE TOP  ---------------------------------\n            // score team 1\n            ctx.fillStyle = background;\n            ctx.strokeStyle = gs.teams[0][\"color\"];\n            ctx.beginPath();\n            ctx.rect(this.prc(0.2, W) * rw, 1, this.prc(0.28, W) * rw, this.prc(0.06, H) * rh);\n            ctx.fill();\n            ctx.stroke();\n            ctx.fillStyle = darkYellow;\n            if (gs.darkMode)\n                ctx.fillStyle = gs.teams[0][\"color\"];\n            rotate(ctx, () => {\n                // ctx.fillText(\"Game End\", 0, 0);\n                ctx.fillText(\"Team Yellow : \" + scoreTeam1, 0, -0);\n            }, this.prc(0.45, W) * rw, 0.14 * rh, 180);\n            // ctx.fillText(\"Team Yellow : \" + scoreTeam1, this.prc(0.22, W) * rw, this.prc(0.01, H) * rh);\n\n            // score team 2\n            ctx.fillStyle = background;\n            ctx.strokeStyle = gs.teams[1][\"color\"];\n            ctx.beginPath();\n            ctx.rect(this.prc(0.52, W) * rw, 1, this.prc(0.28, W) * rw, this.prc(0.06, H) * rh);\n            ctx.fill();\n            ctx.stroke();\n            ctx.fillStyle = gs.teams[1][\"color\"];\n            rotate(ctx, () => {\n                // ctx.fillText(\"Game End\", 0, 0);\n                ctx.fillText(\"Team Blue : \" + scoreTeam2, 0, 0);\n            }, this.prc(0.73, W) * rw, 0.14 * rh, 180);\n            // ctx.fillText(\"Team Blue : \" + scoreTeam2, this.prc(0.54, W) * rw, this.prc(0.01, H) * rh);\n\n            // ------------------------------------  SCORE BOTTOM  ---------------------------------\n            // score team 1\n            ctx.fillStyle = background;\n            ctx.strokeStyle = gs.teams[0][\"color\"];\n            ctx.beginPath();\n            ctx.rect(this.prc(0.2, W) * rw, this.prc(0.94, H) * rh, this.prc(0.28, W) * rw, this.prc(0.06, H) * rh);\n            ctx.fill();\n            ctx.stroke();\n            ctx.fillStyle = darkYellow;\n            if (gs.darkMode)\n                ctx.fillStyle = gs.teams[0][\"color\"];\n            ctx.fillText(\"Team Yellow : \" + scoreTeam1, this.prc(0.22, W) * rw, this.prc(0.955, H) * rh);\n\n            // score team 2\n            ctx.fillStyle = background;\n            ctx.strokeStyle = gs.teams[1][\"color\"];\n            ctx.beginPath();\n            ctx.rect(this.prc(0.52, W) * rw, this.prc(0.94, H) * rh, this.prc(0.28, W) * rw, this.prc(0.06, H) * rh);\n            ctx.fill();\n            ctx.stroke();\n            ctx.fillStyle = gs.teams[1][\"color\"];\n            ctx.fillText(\"Team Blue : \" + scoreTeam2, this.prc(0.54, W) * rw, this.prc(0.955, H) * rh);\n\n            // ------------------------------------  SCORE RIGHT  ---------------------------------\n            // score team 1\n            ctx.fillStyle = background;\n            ctx.strokeStyle = gs.teams[0][\"color\"];\n            ctx.beginPath();\n            ctx.rect(this.prc(0.94, W) * rw, this.prc(0.2, H) * rh, this.prc(0.06, W) * rw, this.prc(0.28, H) * rh);\n            ctx.fill();\n            ctx.stroke();\n            ctx.fillStyle = darkYellow;\n            if (gs.darkMode)\n                ctx.fillStyle = gs.teams[0][\"color\"];\n            rotate(ctx, () => {\n                // ctx.fillText(\"Game End\", 0, 0);\n                ctx.fillText(\"Team Yellow : \" + scoreTeam1, 0, 0);\n            }, this.prc(0.955, W) * rw, this.prc(0.45, H) * rw, 90);\n            // ctx.fillText(\"Team Yellow : \" + scoreTeam1, this.prc(0.22, W) * rw, this.prc(0.01, H) * rh);\n\n            // score team 2\n            ctx.fillStyle = background;\n            ctx.strokeStyle = gs.teams[1][\"color\"];\n            ctx.beginPath();\n            ctx.rect(this.prc(0.94, W) * rw, this.prc(0.52, W) * rw, this.prc(0.06, H) * rh, this.prc(0.28, W) * rw);\n            ctx.fill();\n            ctx.stroke();\n            ctx.fillStyle = gs.teams[1][\"color\"];\n            rotate(ctx, () => {\n                // ctx.fillText(\"Game End\", 0, 0);\n                ctx.fillText(\"Team Blue : \" + scoreTeam2, 0, 0);\n            }, this.prc(0.955, W) * rw, this.prc(0.73, W) * rw, 90);\n            // ctx.fillText(\"Team Blue : \" + scoreTeam2, this.prc(0.54, W) * rw, this.prc(0.01, H) * rh);\n\n            // ------------------------------------  SCORE LEFT  ---------------------------------\n            // score team 1\n            ctx.fillStyle = background;\n            ctx.strokeStyle = gs.teams[0][\"color\"];\n            ctx.beginPath();\n            ctx.rect(1, this.prc(0.2, H) * rh, this.prc(0.06, W) * rw, this.prc(0.28, H) * rh);\n            ctx.fill();\n            ctx.stroke();\n            ctx.fillStyle = darkYellow;\n            if (gs.darkMode)\n                ctx.fillStyle = gs.teams[0][\"color\"];\n            rotate(ctx, () => {\n                // ctx.fillText(\"Game End\", 0, 0);\n                ctx.fillText(\"Team Yellow : \" + scoreTeam1, 0, 0);\n            }, 0.14 * rw, this.prc(0.22, H) * rw, 270);\n            // ctx.fillText(\"Team Yellow : \" + scoreTeam1, this.prc(0.22, W) * rw, this.prc(0.01, H) * rh);\n\n            // score team 2\n            ctx.fillStyle = background;\n            ctx.strokeStyle = gs.teams[1][\"color\"];\n            ctx.beginPath();\n            ctx.rect(1, this.prc(0.52, W) * rw, this.prc(0.06, H) * rh, this.prc(0.28, W) * rw);\n            ctx.fill();\n            ctx.stroke();\n            ctx.fillStyle = gs.teams[1][\"color\"];\n            rotate(ctx, () => {\n                // ctx.fillText(\"Game End\", 0, 0);\n                ctx.fillText(\"Team Blue : \" + scoreTeam2, 0, 0);\n            }, 0.14 * rw, this.prc(0.54, W) * rw, 270);\n            // ctx.fillText(\"Team Blue : \" + scoreTeam2, this.prc(0.54, W) * rw, this.prc(0.01, H) * rh);\n        }\n    }\n    drawPlaceYourRobot(ctx, rh, rw)\n    {\n        ctx.fillStyle = \"white\";\n        ctx.font = this.prc(0.05, H) * rh + 'px sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(\"Place your robot on its Id\", this.prc(0.5, W) * rw, this.prc(0.2, H) * rh);\n    }\n    drawBeginPositions(gs, ctx, rw, rh)\n    {\n        for (let team of gs[\"teams\"])\n        {\n            for (let robot of team[\"robots\"])\n            {\n                let opacity = gs.darkMode ? 0.8 : 1;\n                let color =\n                    robot.positionOk ? \"rgba(38, 178, 178, \" + opacity + \")\" : \"rgba(219, 113, 26, \" + opacity + \")\";\n                if (!robot.tagHorizontallityOk)\n                {\n                    color = \"blue\";\n                }\n                let width = robot.positionOk ? 0.020 : 0.100;\n                let P = [ robot.beginPosition.x * rw, MAZE_HEIGHT * rh - robot.beginPosition.y * rh ];\n                /// draw ellipse\n                ctx.lineWidth = width * rw;\n\n                ctx.strokeStyle = color;\n                ctx.fillStyle = 'white';\n                if (gs.darkMode)\n                {\n                    ctx.fillStyle = \"rgba(255, 255, 255, 0.3)\";\n                }\n                ctx.beginPath();\n                ctx.arc(P[0], P[1], (BEGIN_TOLERENCE + 0.180 - width) * rw, 0, 2 * Math.PI, true);\n                ctx.fill();\n                ctx.stroke();\n\n                ctx.fillStyle = color;\n                ctx.font = '48px sans-serif';\n                ctx.textAlign = 'center';\n                ctx.textBaseline = 'middle';\n                ctx.fillText(robot.id, P[0], P[1]);\n            }\n        }\n    }\n    drawExotecLogo(ctx, rh, rw)\n    {\n        let logo = document.getElementById(\"exotec-logo\");\n        let r = logo.naturalHeight / logo.naturalWidth;\n        let l = this.prc(0.13, W) * rw;\n        let h = l * r\n        ctx.drawImage(logo, this.prc(0.06, W) * rw, this.prc(0.06, H) * rh, l, h);\n    }\n    drawVersion(ctx, rh, rw)\n    {\n        ctx.fillStyle = \"#28AFB9\";\n        ctx.font = this.prc(0.015, H) * rh + 'px sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(\"V\" + VERSION + \"+\" + BUILD, this.prc(0.5, W) * rw, this.prc(0.98, H) * rh);\n    }\n    drawExolegendLogo(ctx, rh, rw)\n    {\n\n        let logo = document.getElementById(\"exolegend-logo\");\n        let l = this.prc(0.4, W) * rw;\n        let h = this.prc(0.4, H) * rh;\n\n        ctx.save();\n\n        this.a = (this.a + 1) % 360;\n        // this.a = 90;\n        ctx.rotate(this.a / 180 * Math.PI);\n        let cosa = Math.cos(this.a / 180 * Math.PI);\n        let sina = Math.sin(this.a / 180 * Math.PI);\n        let x = this.prc(0.5, W) * rw;\n        let y = this.prc(0.5, H) * rh;\n        ctx.translate(sina * y + cosa * x, -x * sina + cosa * y);\n\n        ctx.drawImage(logo, -l / 2, -h / 2, l, h);\n\n        ctx.restore();\n\n        // ctx.drawImage(logo, this.prc(0.5, W) * rw - l/2, this.prc(0.5, H) * rh - h/2, l, h);\n    }\n    drawHostName(gs, ctx, rw, rh)\n    {\n        if (gs.phase == \"REGISTER\")\n        {\n            ctx.fillStyle = \"#28AFB9\";\n            ctx.font = this.prc(0.02, H) * rh + 'px sans-serif';\n            ctx.textBaseline = 'middle';\n            ctx.fillText(this.host, this.prc(0.1, W) * rw, this.prc(0.97, H) * rh);\n        }\n    }\n    /*drawEnd(gs, ctx, rh, rw) {\n        ctx.filter = 'blur(4px)';\n    }*/\n    drawEndMaze(gs, ctx, rw, rh)\n    {\n\n        let ilen = gs.coins[0].length;\n        let jlen = gs.coins.length;\n        let moduleColor = {};\n        for (let team of gs[\"teams\"])\n        {\n            moduleColor[team[\"name\"]] = team[\"color\"];\n        }\n        ctx.fillStyle = \"rgba(255,255,255,0.9)\";\n        if (gs.darkMode)\n        {\n            ctx.fillStyle = \"rgba(0,0,0,0.9)\";\n        }\n\n        ctx.beginPath();\n        ctx.rect(0, 0, MAZE_WIDTH * rw, MAZE_HEIGHT * rw);\n        ctx.fill();\n\n        for (let i = 0; i < ilen; i++)\n        {\n\n            for (let j = 0; j < jlen; j++)\n            {\n\n                let module = gs.modules[j][i];\n\n                if (module[\"possession\"] in moduleColor)\n                {\n                    ctx.fillStyle = moduleColor[module[\"possession\"]];\n                    ctx.beginPath();\n                    ctx.rect(i * MODULE_WIDTH * rw, (MAZE_HEIGHT - (j + 1) * MODULE_WIDTH) * rh, MODULE_WIDTH * rw,\n                             MODULE_WIDTH * rh);\n                    ctx.fill();\n                }\n            }\n        }\n        // this.mazeDrawer.draw(gs, ctx, rh, rw);\n        // this.drawMovingObjects(gs, ctx, rh, rw);\n    }\n\n    isWinner(gs, team)\n    {\n        return team.state == \"WINNER\";\n    }\n\n    drawEnd(gs, ctx, rh, rw)\n    {\n\n        /*let img = new Image()\n        img.src = this.cnv.toDataURL();\n        ctx.filter = 'blur(10px)';\n        ctx.drawImage(img, 100, 100);*/\n\n        // Draw four squares\n        const yellow = \"rgba(239, 192, 48, 0.2)\";\n        var darkYellow = \"rgba(165, 124, 1, 1)\"; // gs.teams[0].color;\n        const blue = \"rgba(38, 178, 178, 0.2)\";\n        var darkBlue = \"rgba(16, 116, 150, 1)\"; // gs.teams[1].color;\n        var white = 'rgba(255,255,255,0.4)';\n        if (gs.darkMode)\n        {\n            white = 'rgba(0,0,0,0.5)';\n            darkBlue = \"rgba(38, 50, 255, 1)\";\n            darkYellow = \"rgba(211, 190, 10, 1)\";\n        }\n        // WHite cross\n        ctx.lineWidth = 0;\n        ctx.fillStyle = white;\n        ctx.beginPath();\n        ctx.rect(0, 0, rw * this.prc(1, W), rh * this.prc(1, H))\n        ctx.fill()\n\n        // top left\n        ctx.lineWidth = 0;\n        ctx.fillStyle = blue;\n        ctx.beginPath();\n        ctx.rect(0, 0, rw * this.prc(0.45, W), rh * this.prc(0.45, H))\n        ctx.fill()\n\n        // top right\n        ctx.lineWidth = 0;\n        ctx.fillStyle = yellow;\n        ctx.beginPath();\n        ctx.rect(rw * this.prc(0.55, W), 0, rw * this.prc(1, W), rh * this.prc(0.45, H))\n        ctx.fill()\n\n        // bootom left\n        ctx.lineWidth = 0;\n        ctx.fillStyle = yellow;\n        ctx.beginPath();\n        ctx.rect(0, rh * this.prc(0.55, H), rw * this.prc(0.45, W), rh * this.prc(1, H))\n        ctx.fill()\n\n        // top right\n        ctx.lineWidth = 0;\n        ctx.fillStyle = blue;\n        ctx.beginPath();\n        ctx.rect(rw * this.prc(0.55, W), rh * this.prc(0.55, W), rw * this.prc(1, W), rh * this.prc(1, H))\n        ctx.fill()\n\n        /*end game*/\n        ctx.fillStyle = \"#E17E4C\";\n        ctx.font = this.prc(0.06, H) * rh + 'px sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(\"Game End\", this.prc(0.25, W) * rw, this.prc(0.5, H) * rh);\n        rotate(ctx, () => { ctx.fillText(\"Game End\", 0, 0); }, this.prc(0.75, W) * rw, this.prc(0.5, H) * rh, 180);\n        rotate(ctx, () => { ctx.fillText(\"Game End\", 0, 0); }, this.prc(0.5, W) * rw, this.prc(0.25, H) * rh, 90);\n        rotate(ctx, () => { ctx.fillText(\"Game End\", 0, 0); }, this.prc(0.5, W) * rw, this.prc(0.75, H) * rh, -90);\n\n        /*team score*/ // V1\n        // team 1\n        let team1 = gs.teams[1];\n\n        ctx.fillStyle = darkBlue;\n        ctx.font = this.prc(0.06, H) * rh + 'px sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n\n        ctx.fillText(team1.name, this.prc(0.225, W) * rw, this.prc(0.16, H) * rh);\n        ctx.fillText('Score : ' + team1.score, this.prc(0.225, W) * rw, this.prc(0.26, H) * rh);\n\n        rotate(ctx, () => { ctx.fillText(team1.name, 0, 0); }, this.prc(0.775, W) * rw, this.prc(0.86, H) * rh, 180);\n        rotate(ctx, () => { ctx.fillText('Score : ' + team1.score, 0, 0); }, this.prc(0.775, W) * rw,\n               this.prc(0.74, H) * rh, 180);\n\n        // team 2\n\n        let team2 = gs.teams[0];\n        ctx.fillStyle = darkYellow;\n        ctx.font = this.prc(0.06, H) * rh + 'px sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n\n        rotate(ctx, () => { ctx.fillText(team2.name, 0, 0); }, this.prc(0.7, W) * rw, this.prc(0.225, H) * rh, 90);\n        rotate(ctx, () => { ctx.fillText('Score : ' + team2.score, 0, 0); }, this.prc(0.8, W) * rw,\n               this.prc(0.255, H) * rh, 90);\n\n        rotate(ctx, () => { ctx.fillText(team2.name, 0, 0); }, this.prc(0.3, W) * rw, this.prc(0.775, H) * rh, -90);\n        rotate(ctx, () => { ctx.fillText('Score : ' + team2.score, 0, 0); }, this.prc(0.2, W) * rw,\n               this.prc(0.775, H) * rh, -90);\n\n        // draw   ------  podium\n\n        ctx.font = this.prc(0.06, H) * rh + 'px sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        let winner1 = this.isWinner(gs, team1);\n        let winner2 = this.isWinner(gs, team2);\n        let winCol = [ '#E17E4C', '#9EB861', 'rgb(220, 223, 39)' ];\n        let winText = [ 'Loser', 'Winner', 'Equality' ];\n\n        if (winner1 && winner2)\n        {\n            // drawReturnedImage(ctx, this., P[0], P[1], 0.36*rw, 0.12*rh, a/Math.PI*180);\n            drawReturnedImage(ctx, this.equality, this.prc(0.255, W) * rw, this.prc(0.36, H) * rh,\n                              this.prc(0.19, W) * rw, this.prc(0.07, H) * rh, 0);\n            drawReturnedImage(ctx, this.equality, this.prc(0.775, W) * rw, this.prc(0.64, H) * rh,\n                              this.prc(0.19, W) * rw, this.prc(0.07, H) * rh, 180);\n            drawReturnedImage(ctx, this.equality, this.prc(0.9, W) * rw, this.prc(0.255, H) * rh,\n                              this.prc(0.19, W) * rw, this.prc(0.07, H) * rh, 90);\n            drawReturnedImage(ctx, this.equality, this.prc(0.1, W) * rw, this.prc(0.775, H) * rh,\n                              this.prc(0.19, W) * rw, this.prc(0.07, H) * rh, -90);\n        }\n        else\n        {\n            if (winner1)\n            {\n\n                drawReturnedImage(ctx, this.winner, this.prc(0.255, W) * rw, this.prc(0.36, H) * rh,\n                                  this.prc(0.17, W) * rw, this.prc(0.07, H) * rh, 0);\n                drawReturnedImage(ctx, this.winner, this.prc(0.775, W) * rw, this.prc(0.64, H) * rh,\n                                  this.prc(0.17, W) * rw, this.prc(0.07, H) * rh, 180);\n                drawReturnedImage(ctx, this.loser, this.prc(0.9, W) * rw, this.prc(0.255, H) * rh,\n                                  this.prc(0.15, W) * rw, this.prc(0.07, H) * rh, 90);\n                drawReturnedImage(ctx, this.loser, this.prc(0.1, W) * rw, this.prc(0.775, H) * rh,\n                                  this.prc(0.15, W) * rw, this.prc(0.07, H) * rh, -90);\n            }\n            else\n            {\n                drawReturnedImage(ctx, this.loser, this.prc(0.255, W) * rw, this.prc(0.36, H) * rh,\n                                  this.prc(0.15, W) * rw, this.prc(0.07, H) * rh, 0);\n                drawReturnedImage(ctx, this.loser, this.prc(0.775, W) * rw, this.prc(0.64, H) * rh,\n                                  this.prc(0.15, W) * rw, this.prc(0.07, H) * rh, 180);\n                drawReturnedImage(ctx, this.winner, this.prc(0.9, W) * rw, this.prc(0.255, H) * rh,\n                                  this.prc(0.17, W) * rw, this.prc(0.07, H) * rh, 90);\n                drawReturnedImage(ctx, this.winner, this.prc(0.1, W) * rw, this.prc(0.775, H) * rh,\n                                  this.prc(0.17, W) * rw, this.prc(0.07, H) * rh, -90);\n            }\n        }\n    }\n    setTags(topLeft, topRight, bottomRight, bottomLeft)\n    {\n        this.tags = [ topLeft, topRight, bottomRight, bottomLeft ];\n    }\n    prc(size, sens)\n    {\n        if (sens == H)\n            return size * MAZE_HEIGHT;\n        else if (sens == W)\n            return size * MAZE_WIDTH;\n    }\n    getHost()\n    {\n        return this.host;\n    }\n}\n","import GameMazeService from \"@/services/gameMazeService\";\n\n\nexport default {\n    install (app) {\n        var gameMaze = new GameMazeService({});\n        app.config.globalProperties.$gameMaze = gameMaze;\n        \n    }\n}","import { createApp } from 'vue'\nimport App from './App.vue'\nimport gameMaze from \"./globals/gameMaze\"\n\nconst app = createApp(App);\n\napp.use(gameMaze);\napp.mount('#app');\n","var map = {\n\t\"./bomb1.png\": 2978,\n\t\"./bomb2.png\": 1507,\n\t\"./bomb3.png\": 2360\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8972;","var map = {\n\t\"./coin0.gif\": 5301,\n\t\"./coin1.gif\": 4595,\n\t\"./coin10.gif\": 8072,\n\t\"./coin11.gif\": 2703,\n\t\"./coin2.gif\": 8325,\n\t\"./coin3.gif\": 5427,\n\t\"./coin4.gif\": 2171,\n\t\"./coin5.gif\": 178,\n\t\"./coin6.gif\": 3936,\n\t\"./coin7.gif\": 3525,\n\t\"./coin8.gif\": 6266,\n\t\"./coin9.gif\": 3760\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1116;","var map = {\n\t\"./arena-a/biAngle.gif\": 2890,\n\t\"./arena-b/biAngle.gif\": 4778,\n\t\"./arena-c/backup/biAngle.gif\": 6294,\n\t\"./arena-c/biAngle.gif\": 6926,\n\t\"./arena-d/backup/biAngle.gif\": 9403,\n\t\"./arena-d/biAngle.gif\": 5711,\n\t\"./terra/biAngle.gif\": 5796\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 9537;","var map = {\n\t\"./arena-a/bi.gif\": 3420,\n\t\"./arena-b/bi.gif\": 6608,\n\t\"./arena-c/backup/bi.gif\": 7625,\n\t\"./arena-c/bi.gif\": 1601,\n\t\"./arena-d/backup/bi.gif\": 8025,\n\t\"./arena-d/bi.gif\": 4978,\n\t\"./terra/bi.gif\": 127\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7686;","var map = {\n\t\"./arena-a/end.gif\": 7406,\n\t\"./arena-b/end.gif\": 8474,\n\t\"./arena-c/backup/end.gif\": 9,\n\t\"./arena-c/end.gif\": 3339,\n\t\"./arena-d/backup/end.gif\": 2633,\n\t\"./arena-d/end.gif\": 3624,\n\t\"./terra/end.gif\": 5710\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 9560;","var map = {\n\t\"./arena-a/full.gif\": 9895,\n\t\"./arena-b/full.gif\": 4952,\n\t\"./arena-c/backup/full.gif\": 9774,\n\t\"./arena-c/full.gif\": 5591,\n\t\"./arena-d/backup/full.gif\": 3124,\n\t\"./arena-d/full.gif\": 2291,\n\t\"./terra/full.gif\": 18\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3509;","var map = {\n\t\"./arena-a/quatro.gif\": 9868,\n\t\"./arena-b/quatro.gif\": 7901,\n\t\"./arena-c/backup/quatro.gif\": 9801,\n\t\"./arena-c/quatro.gif\": 8818,\n\t\"./arena-d/backup/quatro.gif\": 1541,\n\t\"./arena-d/quatro.gif\": 3380,\n\t\"./terra/quatro.gif\": 6982\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2363;","var map = {\n\t\"./arena-a/triple.gif\": 3097,\n\t\"./arena-b/triple.gif\": 4962,\n\t\"./arena-c/backup/triple.gif\": 2226,\n\t\"./arena-c/triple.gif\": 4474,\n\t\"./arena-d/backup/triple.gif\": 3116,\n\t\"./arena-d/triple.gif\": 2372,\n\t\"./terra/triple.gif\": 8963\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8725;","var map = {\n\t\"./marker_0.png\": 1110,\n\t\"./marker_1.png\": 9470,\n\t\"./marker_10.png\": 9803,\n\t\"./marker_11.png\": 4126,\n\t\"./marker_12.png\": 5659,\n\t\"./marker_13.png\": 2923,\n\t\"./marker_14.png\": 7633,\n\t\"./marker_15.png\": 4487,\n\t\"./marker_16.png\": 6504,\n\t\"./marker_17.png\": 7684,\n\t\"./marker_18.png\": 4840,\n\t\"./marker_19.png\": 7428,\n\t\"./marker_2.png\": 3623,\n\t\"./marker_20.png\": 6381,\n\t\"./marker_21.png\": 3044,\n\t\"./marker_22.png\": 1332,\n\t\"./marker_23.png\": 2594,\n\t\"./marker_24.png\": 6619,\n\t\"./marker_25.png\": 9240,\n\t\"./marker_26.png\": 4272,\n\t\"./marker_27.png\": 6553,\n\t\"./marker_28.png\": 418,\n\t\"./marker_29.png\": 2245,\n\t\"./marker_3.png\": 1329,\n\t\"./marker_30.png\": 8084,\n\t\"./marker_31.png\": 6363,\n\t\"./marker_32.png\": 7636,\n\t\"./marker_33.png\": 952,\n\t\"./marker_34.png\": 2595,\n\t\"./marker_35.png\": 8600,\n\t\"./marker_36.png\": 7287,\n\t\"./marker_37.png\": 3703,\n\t\"./marker_38.png\": 3739,\n\t\"./marker_39.png\": 5246,\n\t\"./marker_4.png\": 1613,\n\t\"./marker_40.png\": 4024,\n\t\"./marker_41.png\": 5240,\n\t\"./marker_42.png\": 7790,\n\t\"./marker_43.png\": 4567,\n\t\"./marker_44.png\": 3429,\n\t\"./marker_45.png\": 6726,\n\t\"./marker_46.png\": 4415,\n\t\"./marker_47.png\": 1770,\n\t\"./marker_48.png\": 389,\n\t\"./marker_49.png\": 3257,\n\t\"./marker_50.png\": 8939,\n\t\"./marker_51.png\": 9510,\n\t\"./marker_52.png\": 2061,\n\t\"./marker_53.png\": 1642,\n\t\"./marker_54.png\": 6332,\n\t\"./marker_55.png\": 2970,\n\t\"./marker_56.png\": 8434,\n\t\"./marker_57.png\": 751,\n\t\"./marker_58.png\": 3192\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4354;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmaze\"] = self[\"webpackChunkmaze\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1726); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_createVNode","_component_MazeField","_createElementVNode","class","$options","src","$data","_hoisted_2","data","theGameState","simulation","playing","regi","host","boardUrl","darkMode","hasError","iframeSrc","computed","canvas","document","getElementById","mazeClass","this","standByClass","phase","watch","handler","newGameState","oldGameState","className","changeUrl","robotLen","team","teams","robots","length","deep","methods","resizeBoard","scoring","style","width","window","innerHeight","left","Math","round","innerWidth","async","newUrl","checkIframeResponse","console","log","url","response","fetch","method","mode","err","error","mounted","$gameMaze","startUpdating","setTags","addEventListener","setTimeout","__exports__","version","build","mazeWidth","mazeHeight","tagSize","detectionTagSize","tagDistance","tagTopDistance","reverseAngleFor","drawTag","tags","wallsFile","coinsFile","modulesLengthHeight","modulesLengthWidth","moduleHeight","moduleWidth","coinRadius","coinColor","coinStrokeColor","projectedCircleOpacity","projectedCIrcleRadius","robotRadius","robotTakeRadius","robotWallDetectionRadius","robotWheelRadius","robotCenterX","robotCenterY","robotUndetectedTimeout","gameDuration","shrinkTime","beginTolerence","authorizedFreezTime","freezTimeKillTolerence","timeOutBeforeKill","wallPenalityTime","wallPenalityMaxSpeed","maxPenalityBeforekill","deathCounter","undetectedTagKillTimeTolerence","robotAroundFrag","fragScore","weaponPosition","balloonRadius","penalityTimeForAdditionalWall","coinDesign","rocketSquareMaxRadius","rocketSpeed","randomMaze","timeBetweenSpawn","nbBombsBySpawn","incrementTimeByShrink","decrementBombByShrink","bombTimeToExplode","explosionSpeed","explosionKillRadius","isPenalityDroppingBomb","bombIsKilling","freezeDuration","cameraHeight","robotHeight","antennaPort","cameraPort","antennaSleepTime","dummyMode","calibrationCode","manualCalibrationIterations","projx","projz","projy","remote","arenaDebugRemote","debugRemoteSpeed","verticalUI","robotPlaying","simulationMenu","calibrationMenu","precisionCheckMenu","playMenu","homePage","designForTerra","showScoreFrame","fullScreen","debugMenu","showDebugRobots","logLevel","token","mazeKeystoneOffset","tl","tr","br","bl","maxAccel","logFalcon","showFalconMeanTime","freezMazeTags","markerFilterCoefficient","tagToDebug","useLargeDetectionParams","RemazeIfNoRobotScanned","positionDeviation","angleDeviation","wheelRadiusImprecision","debugGaussianNoise","DEBUG_MODE","config","FULL_SCREEN","components","MazeField","api","debugMode","created","title","render","drawReturnedImage","ctx","image","x","y","w","h","a","cx","cy","save","rotate","PI","cosa","cos","sina","sin","translate","drawImage","restore","callback","getTransform","from","to","A","H","b","i","k","k_i","l","lhs","m","ref","rhs","assert","push","numeric","applyTransform","elementId","originalPos","targetPos","j","p","len","results","el","transform","results1","toFixed","join","transformOrigin","MODULE_WIDTH","MAZE_HEIGHT","DesignMazeService","constructor","designName","quatroLoaded","quatro","Image","require","quatroDim","tripleLoaded","triple","tripleDim","biLoaded","bi","biDim","biAngleLoaded","biAngle","biAngleDim","fullLoaded","full","fullDim","endLoaded","end","endDim","links","linksDIm","isLoaded","draw","gs","rh","rw","ilen","modules","jlen","module","enable","bottomRightCorner","initWallCorner","walls","bottom","right","top","rightModule","bottomModule","drawLink","topCheck","leftCheck","topLeftCorner","topRightCorner","bottomLeftCorner","drawWalls","getLinkRotationAngle","link","type","angles","c","trues","angle","corner","index","testBi","coor","GIF","timerID","st","interlacedBufSize","deinterlaceBuf","pixelBufSize","pixelBuf","interlaceOffsets","interlaceSteps","GIF_FILE","GCExt","COMMENT","APPExt","UNKNOWN","IMAGE","EOF","EXT","Stream","Uint8ClampedArray","pos","getString","count","s","String","fromCharCode","readSubBlocks","size","readSubBlocksB","lzwDecode","minSize","pixelPos","clear","eod","done","dic","code","last","d","concat","parseColourTable","colours","parse","bitField","gif","height","colorRes","globalColourCount","bgColourIndex","globalColourTable","parseBlock","parseAppExt","parseGCExt","disposalMethod","transparencyGiven","delayTime","transparencyIndex","parseImg","deinterlace","frame","lines","fromLine","pass","toLine","Uint8Array","set","subarray","frames","time","delay","undefined","leftPos","topPos","localColourTableFlag","localColourTable","interlaced","processFrame","ct","cData","dat","pixCount","ind","useT","pixel","pDat","col","ti","createElement","getContext","lastFrame","getImageData","putImageData","waitTillDone","onload","doOnloadEvent","finnished","loading","frameCount","complete","currentFrame","onloadall","bind","path","playOnLoad","play","canceled","cancelCallback","parseExt","blockID","comment","cancel","blockId","firstFrameOnly","onprogress","bytesRead","totalBytes","cancelLoad","onerror","nextFrameAt","lastFrameAt","Date","valueOf","dataLoaded","loadGif","filename","ajax","XMLHttpRequest","responseType","e","target","status","open","send","paused","pause","clearTimeout","togglePlay","seekFrame","seek","playSpeed","load","GifWrapper","startTime","lastIndex","playingOnce","img","getAttribute","now","playOnce","getIndex","difTime","frameIndex","imageAt","getHeight","getWidth","isEnd","io","SocketclientService","port","socket","emit","addCallback","callBack","on","editConfig","name","value","getConfig","param","WALL_WIDTH","WALL_HEIGHT","TAG_SIZE","TAG_DIST","COIN_RADIUS","ROBOT_RADIUS","BEGIN_TOLERENCE","MAZE_WIDTH","ROBOT_HEIGHT","PROJX","PROJY","PROJZ","SHOW_DEBUG_ROBOTS","BALLOON_RADIUS","VERSION","BUILD","PLAY_MENU","CIRCLE_OPACITY","CIRCLE_RADIUS","W","gameMasterHost","GameMazeService","socketClient","gameState","cnv","coin","passWall","rocketGif","bombBlueGif","bombYellowGif","killWaveGif","wallExplosionGif","dropBombPenalityGif","robotDead","robotAlives","lastCirclePosition","lastStampRobot","lastParse","deadImg","robotImg","freezeEffectImg","loser","winner","equality","light","firetrail","mazeDrawer","coinsImg","corners","slectedCoin","tl_d","tr_d","bl_d","br_d","keyResizeListenerRegistered","res","markers","loadMarkers","procisionCheckTags","loadImg","positionIcon","rocketImage","bombDroppedImageBlue","bombDroppedImageYellow","killWaveImage","wallExplosionImage","dropBombPenalityImage","loadGifs","coinImg","passWallImg","robotDeadImg","completeMaze","setNewGameState","parseGame","mazeCanvas","gameStateRef","updateMazeSize","setInterval","registerTransformEvents","keyResizeListener","key","toLowerCase","initTransformRef","initTransformCorners","applyKeystoneTransform","removeEventListener","checkCor","reduce","dst","map","maze","offsetLeft","offsetTop","offsetWidth","offsetHeight","updateTagPosition","mid","positions","mergeState","update","cnvRect","getBoundingClientRect","clearRect","drawMaze","drawScore","drawRobots","drawRegisterMode","calibData","drawCalibData","drawEndMaze","drawEnd","drawChessBoard","drawPrecisionCheckMarkers","toDataURL","chessboard","chessWidth","naturalWidth","chessHeight","naturalHeight","drawMovingObjects","obj","fillStyle","beginPath","rect","fill","drawKillWaveObjects","killwaveImgRadiusScaler","danger","drawBombObjects","bombImgRadiusScaler","color","drawDrawableObjects","coins","moduleColor","shrinkCoef","prc","P","ri","robot","D","C","lineWidth","highlight","strokeStyle","arc","stroke","moveTo","lineTo","freezeRotation","penActive","r","font","textAlign","textBaseline","fillText","pR","lifes","diffTime","diffX","position","lastPosition","speedX","speedY","late","stamp","P2","abs","pR2","f","Intl","NumberFormat","maximumFractionDigits","drawAngleForCalibData","format","dx","dy","precisionCheck","marker","drawMarkers","mazeTagDetected","tag","squareSize","robotLength","drawVersion","drawHostName","points","line","drawPlaceYourRobot","drawExotecLogo","drawBeginPositions","drawExolegendLogo","darkYellow","background","scoreTeam1","score","scoreTeam2","opacity","positionOk","tagHorizontallityOk","beginPosition","logo","isWinner","state","yellow","blue","darkBlue","white","team1","team2","winner1","winner2","topLeft","topRight","bottomRight","bottomLeft","sens","getHost","install","app","gameMaze","globalProperties","createApp","App","use","mount","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","exports","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","n","getter","__esModule","definition","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","__webpack_exports__"],"sourceRoot":""}